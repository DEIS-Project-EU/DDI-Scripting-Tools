/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace STB_Modeling_Techniques.DEISProject.ODEDataModel.ThriftContract
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class TDDIFMEAPackageUnion : TBase
  {
    private TDDIFMEAPackage _FMEAPackage;
    private TDDIFMEAPackageInterface _FMEAPackageInterface;
    private TDDIFMEAPackageBinding _FMEAPackageBinding;
    private TDDIBasicFMEAPackage _BasicFMEAPackage;
    private TDDIFMEDAPackage _FMEDAPackage;

    public TDDIFMEAPackage FMEAPackage
    {
      get
      {
        return _FMEAPackage;
      }
      set
      {
        __isset.FMEAPackage = true;
        this._FMEAPackage = value;
      }
    }

    public TDDIFMEAPackageInterface FMEAPackageInterface
    {
      get
      {
        return _FMEAPackageInterface;
      }
      set
      {
        __isset.FMEAPackageInterface = true;
        this._FMEAPackageInterface = value;
      }
    }

    public TDDIFMEAPackageBinding FMEAPackageBinding
    {
      get
      {
        return _FMEAPackageBinding;
      }
      set
      {
        __isset.FMEAPackageBinding = true;
        this._FMEAPackageBinding = value;
      }
    }

    public TDDIBasicFMEAPackage BasicFMEAPackage
    {
      get
      {
        return _BasicFMEAPackage;
      }
      set
      {
        __isset.BasicFMEAPackage = true;
        this._BasicFMEAPackage = value;
      }
    }

    public TDDIFMEDAPackage FMEDAPackage
    {
      get
      {
        return _FMEDAPackage;
      }
      set
      {
        __isset.FMEDAPackage = true;
        this._FMEDAPackage = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool FMEAPackage;
      public bool FMEAPackageInterface;
      public bool FMEAPackageBinding;
      public bool BasicFMEAPackage;
      public bool FMEDAPackage;
    }

    public TDDIFMEAPackageUnion() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                FMEAPackage = new TDDIFMEAPackage();
                FMEAPackage.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                FMEAPackageInterface = new TDDIFMEAPackageInterface();
                FMEAPackageInterface.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.Struct) {
                FMEAPackageBinding = new TDDIFMEAPackageBinding();
                FMEAPackageBinding.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.Struct) {
                BasicFMEAPackage = new TDDIBasicFMEAPackage();
                BasicFMEAPackage.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.Struct) {
                FMEDAPackage = new TDDIFMEDAPackage();
                FMEDAPackage.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("TDDIFMEAPackageUnion");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (FMEAPackage != null && __isset.FMEAPackage) {
          field.Name = "FMEAPackage";
          field.Type = TType.Struct;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          FMEAPackage.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (FMEAPackageInterface != null && __isset.FMEAPackageInterface) {
          field.Name = "FMEAPackageInterface";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          FMEAPackageInterface.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (FMEAPackageBinding != null && __isset.FMEAPackageBinding) {
          field.Name = "FMEAPackageBinding";
          field.Type = TType.Struct;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          FMEAPackageBinding.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (BasicFMEAPackage != null && __isset.BasicFMEAPackage) {
          field.Name = "BasicFMEAPackage";
          field.Type = TType.Struct;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          BasicFMEAPackage.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (FMEDAPackage != null && __isset.FMEDAPackage) {
          field.Name = "FMEDAPackage";
          field.Type = TType.Struct;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          FMEDAPackage.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("TDDIFMEAPackageUnion(");
      bool __first = true;
      if (FMEAPackage != null && __isset.FMEAPackage) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FMEAPackage: ");
        __sb.Append(FMEAPackage== null ? "<null>" : FMEAPackage.ToString());
      }
      if (FMEAPackageInterface != null && __isset.FMEAPackageInterface) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FMEAPackageInterface: ");
        __sb.Append(FMEAPackageInterface== null ? "<null>" : FMEAPackageInterface.ToString());
      }
      if (FMEAPackageBinding != null && __isset.FMEAPackageBinding) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FMEAPackageBinding: ");
        __sb.Append(FMEAPackageBinding== null ? "<null>" : FMEAPackageBinding.ToString());
      }
      if (BasicFMEAPackage != null && __isset.BasicFMEAPackage) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BasicFMEAPackage: ");
        __sb.Append(BasicFMEAPackage== null ? "<null>" : BasicFMEAPackage.ToString());
      }
      if (FMEDAPackage != null && __isset.FMEDAPackage) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FMEDAPackage: ");
        __sb.Append(FMEDAPackage== null ? "<null>" : FMEDAPackage.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
