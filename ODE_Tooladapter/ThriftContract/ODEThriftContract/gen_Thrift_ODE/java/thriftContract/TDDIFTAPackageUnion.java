/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class TDDIFTAPackageUnion extends org.apache.thrift.TUnion<TDDIFTAPackageUnion, TDDIFTAPackageUnion._Fields> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDIFTAPackageUnion");
  private static final org.apache.thrift.protocol.TField FTAPACKAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("FTAPackage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField FTAPACKAGE_INTERFACE_FIELD_DESC = new org.apache.thrift.protocol.TField("FTAPackageInterface", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField FTAPACKAGE_BINDING_FIELD_DESC = new org.apache.thrift.protocol.TField("FTAPackageBinding", org.apache.thrift.protocol.TType.STRUCT, (short)3);

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FTAPACKAGE((short)1, "FTAPackage"),
    FTAPACKAGE_INTERFACE((short)2, "FTAPackageInterface"),
    FTAPACKAGE_BINDING((short)3, "FTAPackageBinding");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FTAPACKAGE
          return FTAPACKAGE;
        case 2: // FTAPACKAGE_INTERFACE
          return FTAPACKAGE_INTERFACE;
        case 3: // FTAPACKAGE_BINDING
          return FTAPACKAGE_BINDING;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FTAPACKAGE, new org.apache.thrift.meta_data.FieldMetaData("FTAPackage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIFTAPackage.class)));
    tmpMap.put(_Fields.FTAPACKAGE_INTERFACE, new org.apache.thrift.meta_data.FieldMetaData("FTAPackageInterface", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIFTAPackageInterface.class)));
    tmpMap.put(_Fields.FTAPACKAGE_BINDING, new org.apache.thrift.meta_data.FieldMetaData("FTAPackageBinding", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIFTAPackageBinding.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDIFTAPackageUnion.class, metaDataMap);
  }

  public TDDIFTAPackageUnion() {
    super();
  }

  public TDDIFTAPackageUnion(_Fields setField, java.lang.Object value) {
    super(setField, value);
  }

  public TDDIFTAPackageUnion(TDDIFTAPackageUnion other) {
    super(other);
  }
  public TDDIFTAPackageUnion deepCopy() {
    return new TDDIFTAPackageUnion(this);
  }

  public static TDDIFTAPackageUnion FTAPackage(TDDIFTAPackage value) {
    TDDIFTAPackageUnion x = new TDDIFTAPackageUnion();
    x.setFTAPackage(value);
    return x;
  }

  public static TDDIFTAPackageUnion FTAPackageInterface(TDDIFTAPackageInterface value) {
    TDDIFTAPackageUnion x = new TDDIFTAPackageUnion();
    x.setFTAPackageInterface(value);
    return x;
  }

  public static TDDIFTAPackageUnion FTAPackageBinding(TDDIFTAPackageBinding value) {
    TDDIFTAPackageUnion x = new TDDIFTAPackageUnion();
    x.setFTAPackageBinding(value);
    return x;
  }


  @Override
  protected void checkType(_Fields setField, java.lang.Object value) throws java.lang.ClassCastException {
    switch (setField) {
      case FTAPACKAGE:
        if (value instanceof TDDIFTAPackage) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDIFTAPackage for field 'FTAPackage', but got " + value.getClass().getSimpleName());
      case FTAPACKAGE_INTERFACE:
        if (value instanceof TDDIFTAPackageInterface) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDIFTAPackageInterface for field 'FTAPackageInterface', but got " + value.getClass().getSimpleName());
      case FTAPACKAGE_BINDING:
        if (value instanceof TDDIFTAPackageBinding) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDIFTAPackageBinding for field 'FTAPackageBinding', but got " + value.getClass().getSimpleName());
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected java.lang.Object standardSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TField field) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(field.id);
    if (setField != null) {
      switch (setField) {
        case FTAPACKAGE:
          if (field.type == FTAPACKAGE_FIELD_DESC.type) {
            TDDIFTAPackage FTAPackage;
            FTAPackage = new TDDIFTAPackage();
            FTAPackage.read(iprot);
            return FTAPackage;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case FTAPACKAGE_INTERFACE:
          if (field.type == FTAPACKAGE_INTERFACE_FIELD_DESC.type) {
            TDDIFTAPackageInterface FTAPackageInterface;
            FTAPackageInterface = new TDDIFTAPackageInterface();
            FTAPackageInterface.read(iprot);
            return FTAPackageInterface;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case FTAPACKAGE_BINDING:
          if (field.type == FTAPACKAGE_BINDING_FIELD_DESC.type) {
            TDDIFTAPackageBinding FTAPackageBinding;
            FTAPackageBinding = new TDDIFTAPackageBinding();
            FTAPackageBinding.read(iprot);
            return FTAPackageBinding;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      return null;
    }
  }

  @Override
  protected void standardSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case FTAPACKAGE:
        TDDIFTAPackage FTAPackage = (TDDIFTAPackage)value_;
        FTAPackage.write(oprot);
        return;
      case FTAPACKAGE_INTERFACE:
        TDDIFTAPackageInterface FTAPackageInterface = (TDDIFTAPackageInterface)value_;
        FTAPackageInterface.write(oprot);
        return;
      case FTAPACKAGE_BINDING:
        TDDIFTAPackageBinding FTAPackageBinding = (TDDIFTAPackageBinding)value_;
        FTAPackageBinding.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected java.lang.Object tupleSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, short fieldID) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(fieldID);
    if (setField != null) {
      switch (setField) {
        case FTAPACKAGE:
          TDDIFTAPackage FTAPackage;
          FTAPackage = new TDDIFTAPackage();
          FTAPackage.read(iprot);
          return FTAPackage;
        case FTAPACKAGE_INTERFACE:
          TDDIFTAPackageInterface FTAPackageInterface;
          FTAPackageInterface = new TDDIFTAPackageInterface();
          FTAPackageInterface.read(iprot);
          return FTAPackageInterface;
        case FTAPACKAGE_BINDING:
          TDDIFTAPackageBinding FTAPackageBinding;
          FTAPackageBinding = new TDDIFTAPackageBinding();
          FTAPackageBinding.read(iprot);
          return FTAPackageBinding;
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      throw new org.apache.thrift.protocol.TProtocolException("Couldn't find a field with field id " + fieldID);
    }
  }

  @Override
  protected void tupleSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case FTAPACKAGE:
        TDDIFTAPackage FTAPackage = (TDDIFTAPackage)value_;
        FTAPackage.write(oprot);
        return;
      case FTAPACKAGE_INTERFACE:
        TDDIFTAPackageInterface FTAPackageInterface = (TDDIFTAPackageInterface)value_;
        FTAPackageInterface.write(oprot);
        return;
      case FTAPACKAGE_BINDING:
        TDDIFTAPackageBinding FTAPackageBinding = (TDDIFTAPackageBinding)value_;
        FTAPackageBinding.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TField getFieldDesc(_Fields setField) {
    switch (setField) {
      case FTAPACKAGE:
        return FTAPACKAGE_FIELD_DESC;
      case FTAPACKAGE_INTERFACE:
        return FTAPACKAGE_INTERFACE_FIELD_DESC;
      case FTAPACKAGE_BINDING:
        return FTAPACKAGE_BINDING_FIELD_DESC;
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TStruct getStructDesc() {
    return STRUCT_DESC;
  }

  @Override
  protected _Fields enumForId(short id) {
    return _Fields.findByThriftIdOrThrow(id);
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public TDDIFTAPackage getFTAPackage() {
    if (getSetField() == _Fields.FTAPACKAGE) {
      return (TDDIFTAPackage)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'FTAPackage' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setFTAPackage(TDDIFTAPackage value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.FTAPACKAGE;
    value_ = value;
  }

  public TDDIFTAPackageInterface getFTAPackageInterface() {
    if (getSetField() == _Fields.FTAPACKAGE_INTERFACE) {
      return (TDDIFTAPackageInterface)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'FTAPackageInterface' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setFTAPackageInterface(TDDIFTAPackageInterface value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.FTAPACKAGE_INTERFACE;
    value_ = value;
  }

  public TDDIFTAPackageBinding getFTAPackageBinding() {
    if (getSetField() == _Fields.FTAPACKAGE_BINDING) {
      return (TDDIFTAPackageBinding)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'FTAPackageBinding' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setFTAPackageBinding(TDDIFTAPackageBinding value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.FTAPACKAGE_BINDING;
    value_ = value;
  }

  public boolean isSetFTAPackage() {
    return setField_ == _Fields.FTAPACKAGE;
  }


  public boolean isSetFTAPackageInterface() {
    return setField_ == _Fields.FTAPACKAGE_INTERFACE;
  }


  public boolean isSetFTAPackageBinding() {
    return setField_ == _Fields.FTAPACKAGE_BINDING;
  }


  public boolean equals(java.lang.Object other) {
    if (other instanceof TDDIFTAPackageUnion) {
      return equals((TDDIFTAPackageUnion)other);
    } else {
      return false;
    }
  }

  public boolean equals(TDDIFTAPackageUnion other) {
    return other != null && getSetField() == other.getSetField() && getFieldValue().equals(other.getFieldValue());
  }

  @Override
  public int compareTo(TDDIFTAPackageUnion other) {
    int lastComparison = org.apache.thrift.TBaseHelper.compareTo(getSetField(), other.getSetField());
    if (lastComparison == 0) {
      return org.apache.thrift.TBaseHelper.compareTo(getFieldValue(), other.getFieldValue());
    }
    return lastComparison;
  }


  @Override
  public int hashCode() {
    java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>();
    list.add(this.getClass().getName());
    org.apache.thrift.TFieldIdEnum setField = getSetField();
    if (setField != null) {
      list.add(setField.getThriftFieldId());
      java.lang.Object value = getFieldValue();
      if (value instanceof org.apache.thrift.TEnum) {
        list.add(((org.apache.thrift.TEnum)getFieldValue()).getValue());
      } else {
        list.add(value);
      }
    }
    return list.hashCode();
  }
  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


}
