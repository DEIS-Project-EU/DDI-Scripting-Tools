/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-08-13")
public class TDDIFMEAPackageBinding implements org.apache.thrift.TBase<TDDIFMEAPackageBinding, TDDIFMEAPackageBinding._Fields>, java.io.Serializable, Cloneable, Comparable<TDDIFMEAPackageBinding> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDIFMEAPackageBinding");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("Id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("Name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("Description", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField IS_CITATION_FIELD_DESC = new org.apache.thrift.protocol.TField("IsCitation", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField IS_ABSTRACT_FIELD_DESC = new org.apache.thrift.protocol.TField("IsAbstract", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField KEY_VALUE_MAPS_FIELD_DESC = new org.apache.thrift.protocol.TField("KeyValueMaps", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField CITED_ELEMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("CitedElement", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField FAILURE_ANALYSIS_ARTIFACTS_FIELD_DESC = new org.apache.thrift.protocol.TField("FailureAnalysisArtifacts", org.apache.thrift.protocol.TType.LIST, (short)8);
  private static final org.apache.thrift.protocol.TField FMEAARTIFACTS_FIELD_DESC = new org.apache.thrift.protocol.TField("FMEAArtifacts", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField PARTICIPANT_PACKAGES_FIELD_DESC = new org.apache.thrift.protocol.TField("ParticipantPackages", org.apache.thrift.protocol.TType.LIST, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TDDIFMEAPackageBindingStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TDDIFMEAPackageBindingTupleSchemeFactory();

  public long Id; // required
  public java.lang.String Name; // required
  public java.lang.String Description; // required
  public boolean IsCitation; // required
  public boolean IsAbstract; // required
  public java.util.List<TDDIKeyValueMapRef> KeyValueMaps; // required
  public TDDIAbstractBaseElement CitedElement; // required
  public java.util.List<TDDIAbstractFailureAnalysisArtifactRef> FailureAnalysisArtifacts; // required
  public java.util.List<TDDIAbstractFMEAArtifactRef> FMEAArtifacts; // required
  public java.util.List<TDDIAbstractFMEAPackageRef> ParticipantPackages; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "Id"),
    NAME((short)2, "Name"),
    DESCRIPTION((short)3, "Description"),
    IS_CITATION((short)4, "IsCitation"),
    IS_ABSTRACT((short)5, "IsAbstract"),
    KEY_VALUE_MAPS((short)6, "KeyValueMaps"),
    CITED_ELEMENT((short)7, "CitedElement"),
    FAILURE_ANALYSIS_ARTIFACTS((short)8, "FailureAnalysisArtifacts"),
    FMEAARTIFACTS((short)9, "FMEAArtifacts"),
    PARTICIPANT_PACKAGES((short)11, "ParticipantPackages");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // DESCRIPTION
          return DESCRIPTION;
        case 4: // IS_CITATION
          return IS_CITATION;
        case 5: // IS_ABSTRACT
          return IS_ABSTRACT;
        case 6: // KEY_VALUE_MAPS
          return KEY_VALUE_MAPS;
        case 7: // CITED_ELEMENT
          return CITED_ELEMENT;
        case 8: // FAILURE_ANALYSIS_ARTIFACTS
          return FAILURE_ANALYSIS_ARTIFACTS;
        case 9: // FMEAARTIFACTS
          return FMEAARTIFACTS;
        case 11: // PARTICIPANT_PACKAGES
          return PARTICIPANT_PACKAGES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __ISCITATION_ISSET_ID = 1;
  private static final int __ISABSTRACT_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("Id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("Description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_CITATION, new org.apache.thrift.meta_data.FieldMetaData("IsCitation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IS_ABSTRACT, new org.apache.thrift.meta_data.FieldMetaData("IsAbstract", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.KEY_VALUE_MAPS, new org.apache.thrift.meta_data.FieldMetaData("KeyValueMaps", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIKeyValueMapRef.class))));
    tmpMap.put(_Fields.CITED_ELEMENT, new org.apache.thrift.meta_data.FieldMetaData("CitedElement", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIAbstractBaseElement.class)));
    tmpMap.put(_Fields.FAILURE_ANALYSIS_ARTIFACTS, new org.apache.thrift.meta_data.FieldMetaData("FailureAnalysisArtifacts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIAbstractFailureAnalysisArtifactRef.class))));
    tmpMap.put(_Fields.FMEAARTIFACTS, new org.apache.thrift.meta_data.FieldMetaData("FMEAArtifacts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIAbstractFMEAArtifactRef.class))));
    tmpMap.put(_Fields.PARTICIPANT_PACKAGES, new org.apache.thrift.meta_data.FieldMetaData("ParticipantPackages", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIAbstractFMEAPackageRef.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDIFMEAPackageBinding.class, metaDataMap);
  }

  public TDDIFMEAPackageBinding() {
    this.Name = "";

    this.Description = "";

    this.IsCitation = false;

    this.IsAbstract = false;

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMapRef>();

    this.FailureAnalysisArtifacts = new java.util.ArrayList<TDDIAbstractFailureAnalysisArtifactRef>();

    this.FMEAArtifacts = new java.util.ArrayList<TDDIAbstractFMEAArtifactRef>();

    this.ParticipantPackages = new java.util.ArrayList<TDDIAbstractFMEAPackageRef>();

  }

  public TDDIFMEAPackageBinding(
    long Id,
    java.lang.String Name,
    java.lang.String Description,
    boolean IsCitation,
    boolean IsAbstract,
    java.util.List<TDDIKeyValueMapRef> KeyValueMaps,
    TDDIAbstractBaseElement CitedElement,
    java.util.List<TDDIAbstractFailureAnalysisArtifactRef> FailureAnalysisArtifacts,
    java.util.List<TDDIAbstractFMEAArtifactRef> FMEAArtifacts,
    java.util.List<TDDIAbstractFMEAPackageRef> ParticipantPackages)
  {
    this();
    this.Id = Id;
    setIdIsSet(true);
    this.Name = Name;
    this.Description = Description;
    this.IsCitation = IsCitation;
    setIsCitationIsSet(true);
    this.IsAbstract = IsAbstract;
    setIsAbstractIsSet(true);
    this.KeyValueMaps = KeyValueMaps;
    this.CitedElement = CitedElement;
    this.FailureAnalysisArtifacts = FailureAnalysisArtifacts;
    this.FMEAArtifacts = FMEAArtifacts;
    this.ParticipantPackages = ParticipantPackages;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDDIFMEAPackageBinding(TDDIFMEAPackageBinding other) {
    __isset_bitfield = other.__isset_bitfield;
    this.Id = other.Id;
    if (other.isSetName()) {
      this.Name = other.Name;
    }
    if (other.isSetDescription()) {
      this.Description = other.Description;
    }
    this.IsCitation = other.IsCitation;
    this.IsAbstract = other.IsAbstract;
    if (other.isSetKeyValueMaps()) {
      java.util.List<TDDIKeyValueMapRef> __this__KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMapRef>(other.KeyValueMaps.size());
      for (TDDIKeyValueMapRef other_element : other.KeyValueMaps) {
        __this__KeyValueMaps.add(new TDDIKeyValueMapRef(other_element));
      }
      this.KeyValueMaps = __this__KeyValueMaps;
    }
    if (other.isSetCitedElement()) {
      this.CitedElement = new TDDIAbstractBaseElement(other.CitedElement);
    }
    if (other.isSetFailureAnalysisArtifacts()) {
      java.util.List<TDDIAbstractFailureAnalysisArtifactRef> __this__FailureAnalysisArtifacts = new java.util.ArrayList<TDDIAbstractFailureAnalysisArtifactRef>(other.FailureAnalysisArtifacts.size());
      for (TDDIAbstractFailureAnalysisArtifactRef other_element : other.FailureAnalysisArtifacts) {
        __this__FailureAnalysisArtifacts.add(new TDDIAbstractFailureAnalysisArtifactRef(other_element));
      }
      this.FailureAnalysisArtifacts = __this__FailureAnalysisArtifacts;
    }
    if (other.isSetFMEAArtifacts()) {
      java.util.List<TDDIAbstractFMEAArtifactRef> __this__FMEAArtifacts = new java.util.ArrayList<TDDIAbstractFMEAArtifactRef>(other.FMEAArtifacts.size());
      for (TDDIAbstractFMEAArtifactRef other_element : other.FMEAArtifacts) {
        __this__FMEAArtifacts.add(new TDDIAbstractFMEAArtifactRef(other_element));
      }
      this.FMEAArtifacts = __this__FMEAArtifacts;
    }
    if (other.isSetParticipantPackages()) {
      java.util.List<TDDIAbstractFMEAPackageRef> __this__ParticipantPackages = new java.util.ArrayList<TDDIAbstractFMEAPackageRef>(other.ParticipantPackages.size());
      for (TDDIAbstractFMEAPackageRef other_element : other.ParticipantPackages) {
        __this__ParticipantPackages.add(new TDDIAbstractFMEAPackageRef(other_element));
      }
      this.ParticipantPackages = __this__ParticipantPackages;
    }
  }

  public TDDIFMEAPackageBinding deepCopy() {
    return new TDDIFMEAPackageBinding(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.Id = 0;
    this.Name = "";

    this.Description = "";

    this.IsCitation = false;

    this.IsAbstract = false;

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMapRef>();

    this.CitedElement = null;
    this.FailureAnalysisArtifacts = new java.util.ArrayList<TDDIAbstractFailureAnalysisArtifactRef>();

    this.FMEAArtifacts = new java.util.ArrayList<TDDIAbstractFMEAArtifactRef>();

    this.ParticipantPackages = new java.util.ArrayList<TDDIAbstractFMEAPackageRef>();

  }

  public long getId() {
    return this.Id;
  }

  public TDDIFMEAPackageBinding setId(long Id) {
    this.Id = Id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field Id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.Name;
  }

  public TDDIFMEAPackageBinding setName(java.lang.String Name) {
    this.Name = Name;
    return this;
  }

  public void unsetName() {
    this.Name = null;
  }

  /** Returns true if field Name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.Name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.Name = null;
    }
  }

  public java.lang.String getDescription() {
    return this.Description;
  }

  public TDDIFMEAPackageBinding setDescription(java.lang.String Description) {
    this.Description = Description;
    return this;
  }

  public void unsetDescription() {
    this.Description = null;
  }

  /** Returns true if field Description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.Description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.Description = null;
    }
  }

  public boolean isIsCitation() {
    return this.IsCitation;
  }

  public TDDIFMEAPackageBinding setIsCitation(boolean IsCitation) {
    this.IsCitation = IsCitation;
    setIsCitationIsSet(true);
    return this;
  }

  public void unsetIsCitation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISCITATION_ISSET_ID);
  }

  /** Returns true if field IsCitation is set (has been assigned a value) and false otherwise */
  public boolean isSetIsCitation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISCITATION_ISSET_ID);
  }

  public void setIsCitationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISCITATION_ISSET_ID, value);
  }

  public boolean isIsAbstract() {
    return this.IsAbstract;
  }

  public TDDIFMEAPackageBinding setIsAbstract(boolean IsAbstract) {
    this.IsAbstract = IsAbstract;
    setIsAbstractIsSet(true);
    return this;
  }

  public void unsetIsAbstract() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ISABSTRACT_ISSET_ID);
  }

  /** Returns true if field IsAbstract is set (has been assigned a value) and false otherwise */
  public boolean isSetIsAbstract() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ISABSTRACT_ISSET_ID);
  }

  public void setIsAbstractIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ISABSTRACT_ISSET_ID, value);
  }

  public int getKeyValueMapsSize() {
    return (this.KeyValueMaps == null) ? 0 : this.KeyValueMaps.size();
  }

  public java.util.Iterator<TDDIKeyValueMapRef> getKeyValueMapsIterator() {
    return (this.KeyValueMaps == null) ? null : this.KeyValueMaps.iterator();
  }

  public void addToKeyValueMaps(TDDIKeyValueMapRef elem) {
    if (this.KeyValueMaps == null) {
      this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMapRef>();
    }
    this.KeyValueMaps.add(elem);
  }

  public java.util.List<TDDIKeyValueMapRef> getKeyValueMaps() {
    return this.KeyValueMaps;
  }

  public TDDIFMEAPackageBinding setKeyValueMaps(java.util.List<TDDIKeyValueMapRef> KeyValueMaps) {
    this.KeyValueMaps = KeyValueMaps;
    return this;
  }

  public void unsetKeyValueMaps() {
    this.KeyValueMaps = null;
  }

  /** Returns true if field KeyValueMaps is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyValueMaps() {
    return this.KeyValueMaps != null;
  }

  public void setKeyValueMapsIsSet(boolean value) {
    if (!value) {
      this.KeyValueMaps = null;
    }
  }

  public TDDIAbstractBaseElement getCitedElement() {
    return this.CitedElement;
  }

  public TDDIFMEAPackageBinding setCitedElement(TDDIAbstractBaseElement CitedElement) {
    this.CitedElement = CitedElement;
    return this;
  }

  public void unsetCitedElement() {
    this.CitedElement = null;
  }

  /** Returns true if field CitedElement is set (has been assigned a value) and false otherwise */
  public boolean isSetCitedElement() {
    return this.CitedElement != null;
  }

  public void setCitedElementIsSet(boolean value) {
    if (!value) {
      this.CitedElement = null;
    }
  }

  public int getFailureAnalysisArtifactsSize() {
    return (this.FailureAnalysisArtifacts == null) ? 0 : this.FailureAnalysisArtifacts.size();
  }

  public java.util.Iterator<TDDIAbstractFailureAnalysisArtifactRef> getFailureAnalysisArtifactsIterator() {
    return (this.FailureAnalysisArtifacts == null) ? null : this.FailureAnalysisArtifacts.iterator();
  }

  public void addToFailureAnalysisArtifacts(TDDIAbstractFailureAnalysisArtifactRef elem) {
    if (this.FailureAnalysisArtifacts == null) {
      this.FailureAnalysisArtifacts = new java.util.ArrayList<TDDIAbstractFailureAnalysisArtifactRef>();
    }
    this.FailureAnalysisArtifacts.add(elem);
  }

  public java.util.List<TDDIAbstractFailureAnalysisArtifactRef> getFailureAnalysisArtifacts() {
    return this.FailureAnalysisArtifacts;
  }

  public TDDIFMEAPackageBinding setFailureAnalysisArtifacts(java.util.List<TDDIAbstractFailureAnalysisArtifactRef> FailureAnalysisArtifacts) {
    this.FailureAnalysisArtifacts = FailureAnalysisArtifacts;
    return this;
  }

  public void unsetFailureAnalysisArtifacts() {
    this.FailureAnalysisArtifacts = null;
  }

  /** Returns true if field FailureAnalysisArtifacts is set (has been assigned a value) and false otherwise */
  public boolean isSetFailureAnalysisArtifacts() {
    return this.FailureAnalysisArtifacts != null;
  }

  public void setFailureAnalysisArtifactsIsSet(boolean value) {
    if (!value) {
      this.FailureAnalysisArtifacts = null;
    }
  }

  public int getFMEAArtifactsSize() {
    return (this.FMEAArtifacts == null) ? 0 : this.FMEAArtifacts.size();
  }

  public java.util.Iterator<TDDIAbstractFMEAArtifactRef> getFMEAArtifactsIterator() {
    return (this.FMEAArtifacts == null) ? null : this.FMEAArtifacts.iterator();
  }

  public void addToFMEAArtifacts(TDDIAbstractFMEAArtifactRef elem) {
    if (this.FMEAArtifacts == null) {
      this.FMEAArtifacts = new java.util.ArrayList<TDDIAbstractFMEAArtifactRef>();
    }
    this.FMEAArtifacts.add(elem);
  }

  public java.util.List<TDDIAbstractFMEAArtifactRef> getFMEAArtifacts() {
    return this.FMEAArtifacts;
  }

  public TDDIFMEAPackageBinding setFMEAArtifacts(java.util.List<TDDIAbstractFMEAArtifactRef> FMEAArtifacts) {
    this.FMEAArtifacts = FMEAArtifacts;
    return this;
  }

  public void unsetFMEAArtifacts() {
    this.FMEAArtifacts = null;
  }

  /** Returns true if field FMEAArtifacts is set (has been assigned a value) and false otherwise */
  public boolean isSetFMEAArtifacts() {
    return this.FMEAArtifacts != null;
  }

  public void setFMEAArtifactsIsSet(boolean value) {
    if (!value) {
      this.FMEAArtifacts = null;
    }
  }

  public int getParticipantPackagesSize() {
    return (this.ParticipantPackages == null) ? 0 : this.ParticipantPackages.size();
  }

  public java.util.Iterator<TDDIAbstractFMEAPackageRef> getParticipantPackagesIterator() {
    return (this.ParticipantPackages == null) ? null : this.ParticipantPackages.iterator();
  }

  public void addToParticipantPackages(TDDIAbstractFMEAPackageRef elem) {
    if (this.ParticipantPackages == null) {
      this.ParticipantPackages = new java.util.ArrayList<TDDIAbstractFMEAPackageRef>();
    }
    this.ParticipantPackages.add(elem);
  }

  public java.util.List<TDDIAbstractFMEAPackageRef> getParticipantPackages() {
    return this.ParticipantPackages;
  }

  public TDDIFMEAPackageBinding setParticipantPackages(java.util.List<TDDIAbstractFMEAPackageRef> ParticipantPackages) {
    this.ParticipantPackages = ParticipantPackages;
    return this;
  }

  public void unsetParticipantPackages() {
    this.ParticipantPackages = null;
  }

  /** Returns true if field ParticipantPackages is set (has been assigned a value) and false otherwise */
  public boolean isSetParticipantPackages() {
    return this.ParticipantPackages != null;
  }

  public void setParticipantPackagesIsSet(boolean value) {
    if (!value) {
      this.ParticipantPackages = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case IS_CITATION:
      if (value == null) {
        unsetIsCitation();
      } else {
        setIsCitation((java.lang.Boolean)value);
      }
      break;

    case IS_ABSTRACT:
      if (value == null) {
        unsetIsAbstract();
      } else {
        setIsAbstract((java.lang.Boolean)value);
      }
      break;

    case KEY_VALUE_MAPS:
      if (value == null) {
        unsetKeyValueMaps();
      } else {
        setKeyValueMaps((java.util.List<TDDIKeyValueMapRef>)value);
      }
      break;

    case CITED_ELEMENT:
      if (value == null) {
        unsetCitedElement();
      } else {
        setCitedElement((TDDIAbstractBaseElement)value);
      }
      break;

    case FAILURE_ANALYSIS_ARTIFACTS:
      if (value == null) {
        unsetFailureAnalysisArtifacts();
      } else {
        setFailureAnalysisArtifacts((java.util.List<TDDIAbstractFailureAnalysisArtifactRef>)value);
      }
      break;

    case FMEAARTIFACTS:
      if (value == null) {
        unsetFMEAArtifacts();
      } else {
        setFMEAArtifacts((java.util.List<TDDIAbstractFMEAArtifactRef>)value);
      }
      break;

    case PARTICIPANT_PACKAGES:
      if (value == null) {
        unsetParticipantPackages();
      } else {
        setParticipantPackages((java.util.List<TDDIAbstractFMEAPackageRef>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case IS_CITATION:
      return isIsCitation();

    case IS_ABSTRACT:
      return isIsAbstract();

    case KEY_VALUE_MAPS:
      return getKeyValueMaps();

    case CITED_ELEMENT:
      return getCitedElement();

    case FAILURE_ANALYSIS_ARTIFACTS:
      return getFailureAnalysisArtifacts();

    case FMEAARTIFACTS:
      return getFMEAArtifacts();

    case PARTICIPANT_PACKAGES:
      return getParticipantPackages();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case IS_CITATION:
      return isSetIsCitation();
    case IS_ABSTRACT:
      return isSetIsAbstract();
    case KEY_VALUE_MAPS:
      return isSetKeyValueMaps();
    case CITED_ELEMENT:
      return isSetCitedElement();
    case FAILURE_ANALYSIS_ARTIFACTS:
      return isSetFailureAnalysisArtifacts();
    case FMEAARTIFACTS:
      return isSetFMEAArtifacts();
    case PARTICIPANT_PACKAGES:
      return isSetParticipantPackages();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TDDIFMEAPackageBinding)
      return this.equals((TDDIFMEAPackageBinding)that);
    return false;
  }

  public boolean equals(TDDIFMEAPackageBinding that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_Id = true;
    boolean that_present_Id = true;
    if (this_present_Id || that_present_Id) {
      if (!(this_present_Id && that_present_Id))
        return false;
      if (this.Id != that.Id)
        return false;
    }

    boolean this_present_Name = true && this.isSetName();
    boolean that_present_Name = true && that.isSetName();
    if (this_present_Name || that_present_Name) {
      if (!(this_present_Name && that_present_Name))
        return false;
      if (!this.Name.equals(that.Name))
        return false;
    }

    boolean this_present_Description = true && this.isSetDescription();
    boolean that_present_Description = true && that.isSetDescription();
    if (this_present_Description || that_present_Description) {
      if (!(this_present_Description && that_present_Description))
        return false;
      if (!this.Description.equals(that.Description))
        return false;
    }

    boolean this_present_IsCitation = true;
    boolean that_present_IsCitation = true;
    if (this_present_IsCitation || that_present_IsCitation) {
      if (!(this_present_IsCitation && that_present_IsCitation))
        return false;
      if (this.IsCitation != that.IsCitation)
        return false;
    }

    boolean this_present_IsAbstract = true;
    boolean that_present_IsAbstract = true;
    if (this_present_IsAbstract || that_present_IsAbstract) {
      if (!(this_present_IsAbstract && that_present_IsAbstract))
        return false;
      if (this.IsAbstract != that.IsAbstract)
        return false;
    }

    boolean this_present_KeyValueMaps = true && this.isSetKeyValueMaps();
    boolean that_present_KeyValueMaps = true && that.isSetKeyValueMaps();
    if (this_present_KeyValueMaps || that_present_KeyValueMaps) {
      if (!(this_present_KeyValueMaps && that_present_KeyValueMaps))
        return false;
      if (!this.KeyValueMaps.equals(that.KeyValueMaps))
        return false;
    }

    boolean this_present_CitedElement = true && this.isSetCitedElement();
    boolean that_present_CitedElement = true && that.isSetCitedElement();
    if (this_present_CitedElement || that_present_CitedElement) {
      if (!(this_present_CitedElement && that_present_CitedElement))
        return false;
      if (!this.CitedElement.equals(that.CitedElement))
        return false;
    }

    boolean this_present_FailureAnalysisArtifacts = true && this.isSetFailureAnalysisArtifacts();
    boolean that_present_FailureAnalysisArtifacts = true && that.isSetFailureAnalysisArtifacts();
    if (this_present_FailureAnalysisArtifacts || that_present_FailureAnalysisArtifacts) {
      if (!(this_present_FailureAnalysisArtifacts && that_present_FailureAnalysisArtifacts))
        return false;
      if (!this.FailureAnalysisArtifacts.equals(that.FailureAnalysisArtifacts))
        return false;
    }

    boolean this_present_FMEAArtifacts = true && this.isSetFMEAArtifacts();
    boolean that_present_FMEAArtifacts = true && that.isSetFMEAArtifacts();
    if (this_present_FMEAArtifacts || that_present_FMEAArtifacts) {
      if (!(this_present_FMEAArtifacts && that_present_FMEAArtifacts))
        return false;
      if (!this.FMEAArtifacts.equals(that.FMEAArtifacts))
        return false;
    }

    boolean this_present_ParticipantPackages = true && this.isSetParticipantPackages();
    boolean that_present_ParticipantPackages = true && that.isSetParticipantPackages();
    if (this_present_ParticipantPackages || that_present_ParticipantPackages) {
      if (!(this_present_ParticipantPackages && that_present_ParticipantPackages))
        return false;
      if (!this.ParticipantPackages.equals(that.ParticipantPackages))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(Id);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + Name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + Description.hashCode();

    hashCode = hashCode * 8191 + ((IsCitation) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((IsAbstract) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetKeyValueMaps()) ? 131071 : 524287);
    if (isSetKeyValueMaps())
      hashCode = hashCode * 8191 + KeyValueMaps.hashCode();

    hashCode = hashCode * 8191 + ((isSetCitedElement()) ? 131071 : 524287);
    if (isSetCitedElement())
      hashCode = hashCode * 8191 + CitedElement.hashCode();

    hashCode = hashCode * 8191 + ((isSetFailureAnalysisArtifacts()) ? 131071 : 524287);
    if (isSetFailureAnalysisArtifacts())
      hashCode = hashCode * 8191 + FailureAnalysisArtifacts.hashCode();

    hashCode = hashCode * 8191 + ((isSetFMEAArtifacts()) ? 131071 : 524287);
    if (isSetFMEAArtifacts())
      hashCode = hashCode * 8191 + FMEAArtifacts.hashCode();

    hashCode = hashCode * 8191 + ((isSetParticipantPackages()) ? 131071 : 524287);
    if (isSetParticipantPackages())
      hashCode = hashCode * 8191 + ParticipantPackages.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TDDIFMEAPackageBinding other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Id, other.Id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Name, other.Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Description, other.Description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsCitation()).compareTo(other.isSetIsCitation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsCitation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.IsCitation, other.IsCitation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIsAbstract()).compareTo(other.isSetIsAbstract());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsAbstract()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.IsAbstract, other.IsAbstract);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyValueMaps()).compareTo(other.isSetKeyValueMaps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyValueMaps()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.KeyValueMaps, other.KeyValueMaps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCitedElement()).compareTo(other.isSetCitedElement());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCitedElement()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.CitedElement, other.CitedElement);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFailureAnalysisArtifacts()).compareTo(other.isSetFailureAnalysisArtifacts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFailureAnalysisArtifacts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.FailureAnalysisArtifacts, other.FailureAnalysisArtifacts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFMEAArtifacts()).compareTo(other.isSetFMEAArtifacts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFMEAArtifacts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.FMEAArtifacts, other.FMEAArtifacts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetParticipantPackages()).compareTo(other.isSetParticipantPackages());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParticipantPackages()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ParticipantPackages, other.ParticipantPackages);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TDDIFMEAPackageBinding(");
    boolean first = true;

    sb.append("Id:");
    sb.append(this.Id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("Name:");
    if (this.Name == null) {
      sb.append("null");
    } else {
      sb.append(this.Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Description:");
    if (this.Description == null) {
      sb.append("null");
    } else {
      sb.append(this.Description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("IsCitation:");
    sb.append(this.IsCitation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("IsAbstract:");
    sb.append(this.IsAbstract);
    first = false;
    if (!first) sb.append(", ");
    sb.append("KeyValueMaps:");
    if (this.KeyValueMaps == null) {
      sb.append("null");
    } else {
      sb.append(this.KeyValueMaps);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("CitedElement:");
    if (this.CitedElement == null) {
      sb.append("null");
    } else {
      sb.append(this.CitedElement);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("FailureAnalysisArtifacts:");
    if (this.FailureAnalysisArtifacts == null) {
      sb.append("null");
    } else {
      sb.append(this.FailureAnalysisArtifacts);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("FMEAArtifacts:");
    if (this.FMEAArtifacts == null) {
      sb.append("null");
    } else {
      sb.append(this.FMEAArtifacts);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ParticipantPackages:");
    if (this.ParticipantPackages == null) {
      sb.append("null");
    } else {
      sb.append(this.ParticipantPackages);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (CitedElement != null) {
      CitedElement.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDDIFMEAPackageBindingStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIFMEAPackageBindingStandardScheme getScheme() {
      return new TDDIFMEAPackageBindingStandardScheme();
    }
  }

  private static class TDDIFMEAPackageBindingStandardScheme extends org.apache.thrift.scheme.StandardScheme<TDDIFMEAPackageBinding> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDDIFMEAPackageBinding struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.Id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IS_CITATION
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.IsCitation = iprot.readBool();
              struct.setIsCitationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IS_ABSTRACT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.IsAbstract = iprot.readBool();
              struct.setIsAbstractIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // KEY_VALUE_MAPS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list1056 = iprot.readListBegin();
                struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMapRef>(_list1056.size);
                TDDIKeyValueMapRef _elem1057;
                for (int _i1058 = 0; _i1058 < _list1056.size; ++_i1058)
                {
                  _elem1057 = new TDDIKeyValueMapRef();
                  _elem1057.read(iprot);
                  struct.KeyValueMaps.add(_elem1057);
                }
                iprot.readListEnd();
              }
              struct.setKeyValueMapsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CITED_ELEMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.CitedElement = new TDDIAbstractBaseElement();
              struct.CitedElement.read(iprot);
              struct.setCitedElementIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // FAILURE_ANALYSIS_ARTIFACTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list1059 = iprot.readListBegin();
                struct.FailureAnalysisArtifacts = new java.util.ArrayList<TDDIAbstractFailureAnalysisArtifactRef>(_list1059.size);
                TDDIAbstractFailureAnalysisArtifactRef _elem1060;
                for (int _i1061 = 0; _i1061 < _list1059.size; ++_i1061)
                {
                  _elem1060 = new TDDIAbstractFailureAnalysisArtifactRef();
                  _elem1060.read(iprot);
                  struct.FailureAnalysisArtifacts.add(_elem1060);
                }
                iprot.readListEnd();
              }
              struct.setFailureAnalysisArtifactsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // FMEAARTIFACTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list1062 = iprot.readListBegin();
                struct.FMEAArtifacts = new java.util.ArrayList<TDDIAbstractFMEAArtifactRef>(_list1062.size);
                TDDIAbstractFMEAArtifactRef _elem1063;
                for (int _i1064 = 0; _i1064 < _list1062.size; ++_i1064)
                {
                  _elem1063 = new TDDIAbstractFMEAArtifactRef();
                  _elem1063.read(iprot);
                  struct.FMEAArtifacts.add(_elem1063);
                }
                iprot.readListEnd();
              }
              struct.setFMEAArtifactsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PARTICIPANT_PACKAGES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list1065 = iprot.readListBegin();
                struct.ParticipantPackages = new java.util.ArrayList<TDDIAbstractFMEAPackageRef>(_list1065.size);
                TDDIAbstractFMEAPackageRef _elem1066;
                for (int _i1067 = 0; _i1067 < _list1065.size; ++_i1067)
                {
                  _elem1066 = new TDDIAbstractFMEAPackageRef();
                  _elem1066.read(iprot);
                  struct.ParticipantPackages.add(_elem1066);
                }
                iprot.readListEnd();
              }
              struct.setParticipantPackagesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDDIFMEAPackageBinding struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.Id);
      oprot.writeFieldEnd();
      if (struct.Name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.Name);
        oprot.writeFieldEnd();
      }
      if (struct.Description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.Description);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_CITATION_FIELD_DESC);
      oprot.writeBool(struct.IsCitation);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_ABSTRACT_FIELD_DESC);
      oprot.writeBool(struct.IsAbstract);
      oprot.writeFieldEnd();
      if (struct.KeyValueMaps != null) {
        oprot.writeFieldBegin(KEY_VALUE_MAPS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.KeyValueMaps.size()));
          for (TDDIKeyValueMapRef _iter1068 : struct.KeyValueMaps)
          {
            _iter1068.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.CitedElement != null) {
        oprot.writeFieldBegin(CITED_ELEMENT_FIELD_DESC);
        struct.CitedElement.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.FailureAnalysisArtifacts != null) {
        oprot.writeFieldBegin(FAILURE_ANALYSIS_ARTIFACTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.FailureAnalysisArtifacts.size()));
          for (TDDIAbstractFailureAnalysisArtifactRef _iter1069 : struct.FailureAnalysisArtifacts)
          {
            _iter1069.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.FMEAArtifacts != null) {
        oprot.writeFieldBegin(FMEAARTIFACTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.FMEAArtifacts.size()));
          for (TDDIAbstractFMEAArtifactRef _iter1070 : struct.FMEAArtifacts)
          {
            _iter1070.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.ParticipantPackages != null) {
        oprot.writeFieldBegin(PARTICIPANT_PACKAGES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.ParticipantPackages.size()));
          for (TDDIAbstractFMEAPackageRef _iter1071 : struct.ParticipantPackages)
          {
            _iter1071.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDDIFMEAPackageBindingTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIFMEAPackageBindingTupleScheme getScheme() {
      return new TDDIFMEAPackageBindingTupleScheme();
    }
  }

  private static class TDDIFMEAPackageBindingTupleScheme extends org.apache.thrift.scheme.TupleScheme<TDDIFMEAPackageBinding> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDDIFMEAPackageBinding struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescription()) {
        optionals.set(2);
      }
      if (struct.isSetIsCitation()) {
        optionals.set(3);
      }
      if (struct.isSetIsAbstract()) {
        optionals.set(4);
      }
      if (struct.isSetKeyValueMaps()) {
        optionals.set(5);
      }
      if (struct.isSetCitedElement()) {
        optionals.set(6);
      }
      if (struct.isSetFailureAnalysisArtifacts()) {
        optionals.set(7);
      }
      if (struct.isSetFMEAArtifacts()) {
        optionals.set(8);
      }
      if (struct.isSetParticipantPackages()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeI64(struct.Id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.Name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.Description);
      }
      if (struct.isSetIsCitation()) {
        oprot.writeBool(struct.IsCitation);
      }
      if (struct.isSetIsAbstract()) {
        oprot.writeBool(struct.IsAbstract);
      }
      if (struct.isSetKeyValueMaps()) {
        {
          oprot.writeI32(struct.KeyValueMaps.size());
          for (TDDIKeyValueMapRef _iter1072 : struct.KeyValueMaps)
          {
            _iter1072.write(oprot);
          }
        }
      }
      if (struct.isSetCitedElement()) {
        struct.CitedElement.write(oprot);
      }
      if (struct.isSetFailureAnalysisArtifacts()) {
        {
          oprot.writeI32(struct.FailureAnalysisArtifacts.size());
          for (TDDIAbstractFailureAnalysisArtifactRef _iter1073 : struct.FailureAnalysisArtifacts)
          {
            _iter1073.write(oprot);
          }
        }
      }
      if (struct.isSetFMEAArtifacts()) {
        {
          oprot.writeI32(struct.FMEAArtifacts.size());
          for (TDDIAbstractFMEAArtifactRef _iter1074 : struct.FMEAArtifacts)
          {
            _iter1074.write(oprot);
          }
        }
      }
      if (struct.isSetParticipantPackages()) {
        {
          oprot.writeI32(struct.ParticipantPackages.size());
          for (TDDIAbstractFMEAPackageRef _iter1075 : struct.ParticipantPackages)
          {
            _iter1075.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDDIFMEAPackageBinding struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.Id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.Name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.Description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.IsCitation = iprot.readBool();
        struct.setIsCitationIsSet(true);
      }
      if (incoming.get(4)) {
        struct.IsAbstract = iprot.readBool();
        struct.setIsAbstractIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list1076 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMapRef>(_list1076.size);
          TDDIKeyValueMapRef _elem1077;
          for (int _i1078 = 0; _i1078 < _list1076.size; ++_i1078)
          {
            _elem1077 = new TDDIKeyValueMapRef();
            _elem1077.read(iprot);
            struct.KeyValueMaps.add(_elem1077);
          }
        }
        struct.setKeyValueMapsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.CitedElement = new TDDIAbstractBaseElement();
        struct.CitedElement.read(iprot);
        struct.setCitedElementIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list1079 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.FailureAnalysisArtifacts = new java.util.ArrayList<TDDIAbstractFailureAnalysisArtifactRef>(_list1079.size);
          TDDIAbstractFailureAnalysisArtifactRef _elem1080;
          for (int _i1081 = 0; _i1081 < _list1079.size; ++_i1081)
          {
            _elem1080 = new TDDIAbstractFailureAnalysisArtifactRef();
            _elem1080.read(iprot);
            struct.FailureAnalysisArtifacts.add(_elem1080);
          }
        }
        struct.setFailureAnalysisArtifactsIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list1082 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.FMEAArtifacts = new java.util.ArrayList<TDDIAbstractFMEAArtifactRef>(_list1082.size);
          TDDIAbstractFMEAArtifactRef _elem1083;
          for (int _i1084 = 0; _i1084 < _list1082.size; ++_i1084)
          {
            _elem1083 = new TDDIAbstractFMEAArtifactRef();
            _elem1083.read(iprot);
            struct.FMEAArtifacts.add(_elem1083);
          }
        }
        struct.setFMEAArtifactsIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list1085 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.ParticipantPackages = new java.util.ArrayList<TDDIAbstractFMEAPackageRef>(_list1085.size);
          TDDIAbstractFMEAPackageRef _elem1086;
          for (int _i1087 = 0; _i1087 < _list1085.size; ++_i1087)
          {
            _elem1086 = new TDDIAbstractFMEAPackageRef();
            _elem1086.read(iprot);
            struct.ParticipantPackages.add(_elem1086);
          }
        }
        struct.setParticipantPackagesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

