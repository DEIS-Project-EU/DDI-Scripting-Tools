/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace STB_Modeling_Techniques.DEISProject.ODEDataModel.ThriftContract
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class TDDIEpsilonScriptModelConfig : TBase
  {
    private string _ModelUri;
    private string _ModelName;
    private string _Alias;
    private bool _ReadOnLoad;
    private bool _StoreOnDisposal;

    public string ModelUri
    {
      get
      {
        return _ModelUri;
      }
      set
      {
        __isset.ModelUri = true;
        this._ModelUri = value;
      }
    }

    public string ModelName
    {
      get
      {
        return _ModelName;
      }
      set
      {
        __isset.ModelName = true;
        this._ModelName = value;
      }
    }

    public string Alias
    {
      get
      {
        return _Alias;
      }
      set
      {
        __isset.@Alias = true;
        this._Alias = value;
      }
    }

    public bool ReadOnLoad
    {
      get
      {
        return _ReadOnLoad;
      }
      set
      {
        __isset.ReadOnLoad = true;
        this._ReadOnLoad = value;
      }
    }

    public bool StoreOnDisposal
    {
      get
      {
        return _StoreOnDisposal;
      }
      set
      {
        __isset.StoreOnDisposal = true;
        this._StoreOnDisposal = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool ModelUri;
      public bool ModelName;
      public bool @Alias;
      public bool ReadOnLoad;
      public bool StoreOnDisposal;
    }

    public TDDIEpsilonScriptModelConfig() {
      this._ModelUri = "";
      this.__isset.ModelUri = true;
      this._ModelName = "";
      this.__isset.ModelName = true;
      this._Alias = "";
      this.__isset.@Alias = true;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                ModelUri = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                ModelName = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Alias = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.Bool) {
                ReadOnLoad = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.Bool) {
                StoreOnDisposal = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("TDDIEpsilonScriptModelConfig");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (ModelUri != null && __isset.ModelUri) {
          field.Name = "ModelUri";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ModelUri);
          oprot.WriteFieldEnd();
        }
        if (ModelName != null && __isset.ModelName) {
          field.Name = "ModelName";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(ModelName);
          oprot.WriteFieldEnd();
        }
        if (Alias != null && __isset.@Alias) {
          field.Name = "Alias";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Alias);
          oprot.WriteFieldEnd();
        }
        if (__isset.ReadOnLoad) {
          field.Name = "ReadOnLoad";
          field.Type = TType.Bool;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(ReadOnLoad);
          oprot.WriteFieldEnd();
        }
        if (__isset.StoreOnDisposal) {
          field.Name = "StoreOnDisposal";
          field.Type = TType.Bool;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(StoreOnDisposal);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("TDDIEpsilonScriptModelConfig(");
      bool __first = true;
      if (ModelUri != null && __isset.ModelUri) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ModelUri: ");
        __sb.Append(ModelUri);
      }
      if (ModelName != null && __isset.ModelName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ModelName: ");
        __sb.Append(ModelName);
      }
      if (Alias != null && __isset.@Alias) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Alias: ");
        __sb.Append(Alias);
      }
      if (__isset.ReadOnLoad) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ReadOnLoad: ");
        __sb.Append(ReadOnLoad);
      }
      if (__isset.StoreOnDisposal) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StoreOnDisposal: ");
        __sb.Append(StoreOnDisposal);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
