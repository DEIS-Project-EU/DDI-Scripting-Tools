/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace STB_Modeling_Techniques.DEISProject.ODEDataModel.ThriftContract
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class TDDIMultiLangString : TBase
  {
    private List<TDDIAbstractLangString> _Values;

    public List<TDDIAbstractLangString> Values
    {
      get
      {
        return _Values;
      }
      set
      {
        __isset.Values = true;
        this._Values = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool Values;
    }

    public TDDIMultiLangString() {
      this._Values = new List<TDDIAbstractLangString>();
      this.__isset.Values = true;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.List) {
                {
                  Values = new List<TDDIAbstractLangString>();
                  TList _list1252 = iprot.ReadListBegin();
                  for( int _i1253 = 0; _i1253 < _list1252.Count; ++_i1253)
                  {
                    TDDIAbstractLangString _elem1254;
                    _elem1254 = new TDDIAbstractLangString();
                    _elem1254.Read(iprot);
                    Values.Add(_elem1254);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("TDDIMultiLangString");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Values != null && __isset.Values) {
          field.Name = "Values";
          field.Type = TType.List;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, Values.Count));
            foreach (TDDIAbstractLangString _iter1255 in Values)
            {
              _iter1255.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("TDDIMultiLangString(");
      bool __first = true;
      if (Values != null && __isset.Values) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Values: ");
        __sb.Append(Values);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
