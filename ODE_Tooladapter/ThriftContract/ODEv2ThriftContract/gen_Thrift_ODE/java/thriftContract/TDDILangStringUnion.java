/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class TDDILangStringUnion extends org.apache.thrift.TUnion<TDDILangStringUnion, TDDILangStringUnion._Fields> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDILangStringUnion");
  private static final org.apache.thrift.protocol.TField LANG_STRING_FIELD_DESC = new org.apache.thrift.protocol.TField("LangString", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField EXPRESSION_LANG_STRING_FIELD_DESC = new org.apache.thrift.protocol.TField("ExpressionLangString", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    LANG_STRING((short)1, "LangString"),
    EXPRESSION_LANG_STRING((short)2, "ExpressionLangString");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // LANG_STRING
          return LANG_STRING;
        case 2: // EXPRESSION_LANG_STRING
          return EXPRESSION_LANG_STRING;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.LANG_STRING, new org.apache.thrift.meta_data.FieldMetaData("LangString", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDILangString.class)));
    tmpMap.put(_Fields.EXPRESSION_LANG_STRING, new org.apache.thrift.meta_data.FieldMetaData("ExpressionLangString", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIExpressionLangString.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDILangStringUnion.class, metaDataMap);
  }

  public TDDILangStringUnion() {
    super();
  }

  public TDDILangStringUnion(_Fields setField, java.lang.Object value) {
    super(setField, value);
  }

  public TDDILangStringUnion(TDDILangStringUnion other) {
    super(other);
  }
  public TDDILangStringUnion deepCopy() {
    return new TDDILangStringUnion(this);
  }

  public static TDDILangStringUnion LangString(TDDILangString value) {
    TDDILangStringUnion x = new TDDILangStringUnion();
    x.setLangString(value);
    return x;
  }

  public static TDDILangStringUnion ExpressionLangString(TDDIExpressionLangString value) {
    TDDILangStringUnion x = new TDDILangStringUnion();
    x.setExpressionLangString(value);
    return x;
  }


  @Override
  protected void checkType(_Fields setField, java.lang.Object value) throws java.lang.ClassCastException {
    switch (setField) {
      case LANG_STRING:
        if (value instanceof TDDILangString) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDILangString for field 'LangString', but got " + value.getClass().getSimpleName());
      case EXPRESSION_LANG_STRING:
        if (value instanceof TDDIExpressionLangString) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDIExpressionLangString for field 'ExpressionLangString', but got " + value.getClass().getSimpleName());
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected java.lang.Object standardSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TField field) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(field.id);
    if (setField != null) {
      switch (setField) {
        case LANG_STRING:
          if (field.type == LANG_STRING_FIELD_DESC.type) {
            TDDILangString LangString;
            LangString = new TDDILangString();
            LangString.read(iprot);
            return LangString;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case EXPRESSION_LANG_STRING:
          if (field.type == EXPRESSION_LANG_STRING_FIELD_DESC.type) {
            TDDIExpressionLangString ExpressionLangString;
            ExpressionLangString = new TDDIExpressionLangString();
            ExpressionLangString.read(iprot);
            return ExpressionLangString;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      return null;
    }
  }

  @Override
  protected void standardSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case LANG_STRING:
        TDDILangString LangString = (TDDILangString)value_;
        LangString.write(oprot);
        return;
      case EXPRESSION_LANG_STRING:
        TDDIExpressionLangString ExpressionLangString = (TDDIExpressionLangString)value_;
        ExpressionLangString.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected java.lang.Object tupleSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, short fieldID) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(fieldID);
    if (setField != null) {
      switch (setField) {
        case LANG_STRING:
          TDDILangString LangString;
          LangString = new TDDILangString();
          LangString.read(iprot);
          return LangString;
        case EXPRESSION_LANG_STRING:
          TDDIExpressionLangString ExpressionLangString;
          ExpressionLangString = new TDDIExpressionLangString();
          ExpressionLangString.read(iprot);
          return ExpressionLangString;
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      throw new org.apache.thrift.protocol.TProtocolException("Couldn't find a field with field id " + fieldID);
    }
  }

  @Override
  protected void tupleSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case LANG_STRING:
        TDDILangString LangString = (TDDILangString)value_;
        LangString.write(oprot);
        return;
      case EXPRESSION_LANG_STRING:
        TDDIExpressionLangString ExpressionLangString = (TDDIExpressionLangString)value_;
        ExpressionLangString.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TField getFieldDesc(_Fields setField) {
    switch (setField) {
      case LANG_STRING:
        return LANG_STRING_FIELD_DESC;
      case EXPRESSION_LANG_STRING:
        return EXPRESSION_LANG_STRING_FIELD_DESC;
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TStruct getStructDesc() {
    return STRUCT_DESC;
  }

  @Override
  protected _Fields enumForId(short id) {
    return _Fields.findByThriftIdOrThrow(id);
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public TDDILangString getLangString() {
    if (getSetField() == _Fields.LANG_STRING) {
      return (TDDILangString)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'LangString' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setLangString(TDDILangString value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.LANG_STRING;
    value_ = value;
  }

  public TDDIExpressionLangString getExpressionLangString() {
    if (getSetField() == _Fields.EXPRESSION_LANG_STRING) {
      return (TDDIExpressionLangString)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'ExpressionLangString' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setExpressionLangString(TDDIExpressionLangString value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.EXPRESSION_LANG_STRING;
    value_ = value;
  }

  public boolean isSetLangString() {
    return setField_ == _Fields.LANG_STRING;
  }


  public boolean isSetExpressionLangString() {
    return setField_ == _Fields.EXPRESSION_LANG_STRING;
  }


  public boolean equals(java.lang.Object other) {
    if (other instanceof TDDILangStringUnion) {
      return equals((TDDILangStringUnion)other);
    } else {
      return false;
    }
  }

  public boolean equals(TDDILangStringUnion other) {
    return other != null && getSetField() == other.getSetField() && getFieldValue().equals(other.getFieldValue());
  }

  @Override
  public int compareTo(TDDILangStringUnion other) {
    int lastComparison = org.apache.thrift.TBaseHelper.compareTo(getSetField(), other.getSetField());
    if (lastComparison == 0) {
      return org.apache.thrift.TBaseHelper.compareTo(getFieldValue(), other.getFieldValue());
    }
    return lastComparison;
  }


  @Override
  public int hashCode() {
    java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>();
    list.add(this.getClass().getName());
    org.apache.thrift.TFieldIdEnum setField = getSetField();
    if (setField != null) {
      list.add(setField.getThriftFieldId());
      java.lang.Object value = getFieldValue();
      if (value instanceof org.apache.thrift.TEnum) {
        list.add(((org.apache.thrift.TEnum)getFieldValue()).getValue());
      } else {
        list.add(value);
      }
    }
    return list.hashCode();
  }
  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


}
