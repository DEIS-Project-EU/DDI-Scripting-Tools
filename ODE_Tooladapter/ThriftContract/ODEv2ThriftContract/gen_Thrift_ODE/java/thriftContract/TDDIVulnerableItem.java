/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-11-04")
public class TDDIVulnerableItem implements org.apache.thrift.TBase<TDDIVulnerableItem, TDDIVulnerableItem._Fields>, java.io.Serializable, Cloneable, Comparable<TDDIVulnerableItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDIVulnerableItem");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("Id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("Name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("Description", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField KEY_VALUE_MAPS_FIELD_DESC = new org.apache.thrift.protocol.TField("KeyValueMaps", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField FINANCIAL_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("FinancialValue", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField FINANCIAL_COST_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("FinancialCostType", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField OPERATIONAL_COST_FIELD_DESC = new org.apache.thrift.protocol.TField("OperationalCost", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField OPERATIONAL_COST_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("OperationalCostType", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField VULNERABILITIES_FIELD_DESC = new org.apache.thrift.protocol.TField("Vulnerabilities", org.apache.thrift.protocol.TType.LIST, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TDDIVulnerableItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TDDIVulnerableItemTupleSchemeFactory();

  public long Id; // required
  public java.lang.String Name; // required
  public java.lang.String Description; // required
  public java.util.List<TDDIKeyValueMap> KeyValueMaps; // required
  public double FinancialValue; // required
  /**
   * 
   * @see TDDIFinancialCostType
   */
  public TDDIFinancialCostType FinancialCostType; // required
  public double OperationalCost; // required
  /**
   * 
   * @see TDDIOperationalCostType
   */
  public TDDIOperationalCostType OperationalCostType; // required
  public java.util.List<TDDIVulnerability> Vulnerabilities; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "Id"),
    NAME((short)2, "Name"),
    DESCRIPTION((short)3, "Description"),
    KEY_VALUE_MAPS((short)4, "KeyValueMaps"),
    FINANCIAL_VALUE((short)5, "FinancialValue"),
    /**
     * 
     * @see TDDIFinancialCostType
     */
    FINANCIAL_COST_TYPE((short)6, "FinancialCostType"),
    OPERATIONAL_COST((short)7, "OperationalCost"),
    /**
     * 
     * @see TDDIOperationalCostType
     */
    OPERATIONAL_COST_TYPE((short)8, "OperationalCostType"),
    VULNERABILITIES((short)9, "Vulnerabilities");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // DESCRIPTION
          return DESCRIPTION;
        case 4: // KEY_VALUE_MAPS
          return KEY_VALUE_MAPS;
        case 5: // FINANCIAL_VALUE
          return FINANCIAL_VALUE;
        case 6: // FINANCIAL_COST_TYPE
          return FINANCIAL_COST_TYPE;
        case 7: // OPERATIONAL_COST
          return OPERATIONAL_COST;
        case 8: // OPERATIONAL_COST_TYPE
          return OPERATIONAL_COST_TYPE;
        case 9: // VULNERABILITIES
          return VULNERABILITIES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __FINANCIALVALUE_ISSET_ID = 1;
  private static final int __OPERATIONALCOST_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("Id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("Description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEY_VALUE_MAPS, new org.apache.thrift.meta_data.FieldMetaData("KeyValueMaps", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIKeyValueMap.class))));
    tmpMap.put(_Fields.FINANCIAL_VALUE, new org.apache.thrift.meta_data.FieldMetaData("FinancialValue", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.FINANCIAL_COST_TYPE, new org.apache.thrift.meta_data.FieldMetaData("FinancialCostType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TDDIFinancialCostType.class)));
    tmpMap.put(_Fields.OPERATIONAL_COST, new org.apache.thrift.meta_data.FieldMetaData("OperationalCost", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.OPERATIONAL_COST_TYPE, new org.apache.thrift.meta_data.FieldMetaData("OperationalCostType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TDDIOperationalCostType.class)));
    tmpMap.put(_Fields.VULNERABILITIES, new org.apache.thrift.meta_data.FieldMetaData("Vulnerabilities", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIVulnerability.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDIVulnerableItem.class, metaDataMap);
  }

  public TDDIVulnerableItem() {
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

    this.FinancialValue = 0;

    this.FinancialCostType = thriftContract.TDDIFinancialCostType.FCTEUR;

    this.OperationalCost = 0;

    this.OperationalCostType = thriftContract.TDDIOperationalCostType.OCTWorkdays;

    this.Vulnerabilities = new java.util.ArrayList<TDDIVulnerability>();

  }

  public TDDIVulnerableItem(
    long Id,
    java.lang.String Name,
    java.lang.String Description,
    java.util.List<TDDIKeyValueMap> KeyValueMaps,
    double FinancialValue,
    TDDIFinancialCostType FinancialCostType,
    double OperationalCost,
    TDDIOperationalCostType OperationalCostType,
    java.util.List<TDDIVulnerability> Vulnerabilities)
  {
    this();
    this.Id = Id;
    setIdIsSet(true);
    this.Name = Name;
    this.Description = Description;
    this.KeyValueMaps = KeyValueMaps;
    this.FinancialValue = FinancialValue;
    setFinancialValueIsSet(true);
    this.FinancialCostType = FinancialCostType;
    this.OperationalCost = OperationalCost;
    setOperationalCostIsSet(true);
    this.OperationalCostType = OperationalCostType;
    this.Vulnerabilities = Vulnerabilities;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDDIVulnerableItem(TDDIVulnerableItem other) {
    __isset_bitfield = other.__isset_bitfield;
    this.Id = other.Id;
    if (other.isSetName()) {
      this.Name = other.Name;
    }
    if (other.isSetDescription()) {
      this.Description = other.Description;
    }
    if (other.isSetKeyValueMaps()) {
      java.util.List<TDDIKeyValueMap> __this__KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(other.KeyValueMaps.size());
      for (TDDIKeyValueMap other_element : other.KeyValueMaps) {
        __this__KeyValueMaps.add(new TDDIKeyValueMap(other_element));
      }
      this.KeyValueMaps = __this__KeyValueMaps;
    }
    this.FinancialValue = other.FinancialValue;
    if (other.isSetFinancialCostType()) {
      this.FinancialCostType = other.FinancialCostType;
    }
    this.OperationalCost = other.OperationalCost;
    if (other.isSetOperationalCostType()) {
      this.OperationalCostType = other.OperationalCostType;
    }
    if (other.isSetVulnerabilities()) {
      java.util.List<TDDIVulnerability> __this__Vulnerabilities = new java.util.ArrayList<TDDIVulnerability>(other.Vulnerabilities.size());
      for (TDDIVulnerability other_element : other.Vulnerabilities) {
        __this__Vulnerabilities.add(new TDDIVulnerability(other_element));
      }
      this.Vulnerabilities = __this__Vulnerabilities;
    }
  }

  public TDDIVulnerableItem deepCopy() {
    return new TDDIVulnerableItem(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.Id = 0;
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

    this.FinancialValue = 0;

    this.FinancialCostType = thriftContract.TDDIFinancialCostType.FCTEUR;

    this.OperationalCost = 0;

    this.OperationalCostType = thriftContract.TDDIOperationalCostType.OCTWorkdays;

    this.Vulnerabilities = new java.util.ArrayList<TDDIVulnerability>();

  }

  public long getId() {
    return this.Id;
  }

  public TDDIVulnerableItem setId(long Id) {
    this.Id = Id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field Id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.Name;
  }

  public TDDIVulnerableItem setName(java.lang.String Name) {
    this.Name = Name;
    return this;
  }

  public void unsetName() {
    this.Name = null;
  }

  /** Returns true if field Name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.Name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.Name = null;
    }
  }

  public java.lang.String getDescription() {
    return this.Description;
  }

  public TDDIVulnerableItem setDescription(java.lang.String Description) {
    this.Description = Description;
    return this;
  }

  public void unsetDescription() {
    this.Description = null;
  }

  /** Returns true if field Description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.Description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.Description = null;
    }
  }

  public int getKeyValueMapsSize() {
    return (this.KeyValueMaps == null) ? 0 : this.KeyValueMaps.size();
  }

  public java.util.Iterator<TDDIKeyValueMap> getKeyValueMapsIterator() {
    return (this.KeyValueMaps == null) ? null : this.KeyValueMaps.iterator();
  }

  public void addToKeyValueMaps(TDDIKeyValueMap elem) {
    if (this.KeyValueMaps == null) {
      this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();
    }
    this.KeyValueMaps.add(elem);
  }

  public java.util.List<TDDIKeyValueMap> getKeyValueMaps() {
    return this.KeyValueMaps;
  }

  public TDDIVulnerableItem setKeyValueMaps(java.util.List<TDDIKeyValueMap> KeyValueMaps) {
    this.KeyValueMaps = KeyValueMaps;
    return this;
  }

  public void unsetKeyValueMaps() {
    this.KeyValueMaps = null;
  }

  /** Returns true if field KeyValueMaps is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyValueMaps() {
    return this.KeyValueMaps != null;
  }

  public void setKeyValueMapsIsSet(boolean value) {
    if (!value) {
      this.KeyValueMaps = null;
    }
  }

  public double getFinancialValue() {
    return this.FinancialValue;
  }

  public TDDIVulnerableItem setFinancialValue(double FinancialValue) {
    this.FinancialValue = FinancialValue;
    setFinancialValueIsSet(true);
    return this;
  }

  public void unsetFinancialValue() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FINANCIALVALUE_ISSET_ID);
  }

  /** Returns true if field FinancialValue is set (has been assigned a value) and false otherwise */
  public boolean isSetFinancialValue() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FINANCIALVALUE_ISSET_ID);
  }

  public void setFinancialValueIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FINANCIALVALUE_ISSET_ID, value);
  }

  /**
   * 
   * @see TDDIFinancialCostType
   */
  public TDDIFinancialCostType getFinancialCostType() {
    return this.FinancialCostType;
  }

  /**
   * 
   * @see TDDIFinancialCostType
   */
  public TDDIVulnerableItem setFinancialCostType(TDDIFinancialCostType FinancialCostType) {
    this.FinancialCostType = FinancialCostType;
    return this;
  }

  public void unsetFinancialCostType() {
    this.FinancialCostType = null;
  }

  /** Returns true if field FinancialCostType is set (has been assigned a value) and false otherwise */
  public boolean isSetFinancialCostType() {
    return this.FinancialCostType != null;
  }

  public void setFinancialCostTypeIsSet(boolean value) {
    if (!value) {
      this.FinancialCostType = null;
    }
  }

  public double getOperationalCost() {
    return this.OperationalCost;
  }

  public TDDIVulnerableItem setOperationalCost(double OperationalCost) {
    this.OperationalCost = OperationalCost;
    setOperationalCostIsSet(true);
    return this;
  }

  public void unsetOperationalCost() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OPERATIONALCOST_ISSET_ID);
  }

  /** Returns true if field OperationalCost is set (has been assigned a value) and false otherwise */
  public boolean isSetOperationalCost() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OPERATIONALCOST_ISSET_ID);
  }

  public void setOperationalCostIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OPERATIONALCOST_ISSET_ID, value);
  }

  /**
   * 
   * @see TDDIOperationalCostType
   */
  public TDDIOperationalCostType getOperationalCostType() {
    return this.OperationalCostType;
  }

  /**
   * 
   * @see TDDIOperationalCostType
   */
  public TDDIVulnerableItem setOperationalCostType(TDDIOperationalCostType OperationalCostType) {
    this.OperationalCostType = OperationalCostType;
    return this;
  }

  public void unsetOperationalCostType() {
    this.OperationalCostType = null;
  }

  /** Returns true if field OperationalCostType is set (has been assigned a value) and false otherwise */
  public boolean isSetOperationalCostType() {
    return this.OperationalCostType != null;
  }

  public void setOperationalCostTypeIsSet(boolean value) {
    if (!value) {
      this.OperationalCostType = null;
    }
  }

  public int getVulnerabilitiesSize() {
    return (this.Vulnerabilities == null) ? 0 : this.Vulnerabilities.size();
  }

  public java.util.Iterator<TDDIVulnerability> getVulnerabilitiesIterator() {
    return (this.Vulnerabilities == null) ? null : this.Vulnerabilities.iterator();
  }

  public void addToVulnerabilities(TDDIVulnerability elem) {
    if (this.Vulnerabilities == null) {
      this.Vulnerabilities = new java.util.ArrayList<TDDIVulnerability>();
    }
    this.Vulnerabilities.add(elem);
  }

  public java.util.List<TDDIVulnerability> getVulnerabilities() {
    return this.Vulnerabilities;
  }

  public TDDIVulnerableItem setVulnerabilities(java.util.List<TDDIVulnerability> Vulnerabilities) {
    this.Vulnerabilities = Vulnerabilities;
    return this;
  }

  public void unsetVulnerabilities() {
    this.Vulnerabilities = null;
  }

  /** Returns true if field Vulnerabilities is set (has been assigned a value) and false otherwise */
  public boolean isSetVulnerabilities() {
    return this.Vulnerabilities != null;
  }

  public void setVulnerabilitiesIsSet(boolean value) {
    if (!value) {
      this.Vulnerabilities = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case KEY_VALUE_MAPS:
      if (value == null) {
        unsetKeyValueMaps();
      } else {
        setKeyValueMaps((java.util.List<TDDIKeyValueMap>)value);
      }
      break;

    case FINANCIAL_VALUE:
      if (value == null) {
        unsetFinancialValue();
      } else {
        setFinancialValue((java.lang.Double)value);
      }
      break;

    case FINANCIAL_COST_TYPE:
      if (value == null) {
        unsetFinancialCostType();
      } else {
        setFinancialCostType((TDDIFinancialCostType)value);
      }
      break;

    case OPERATIONAL_COST:
      if (value == null) {
        unsetOperationalCost();
      } else {
        setOperationalCost((java.lang.Double)value);
      }
      break;

    case OPERATIONAL_COST_TYPE:
      if (value == null) {
        unsetOperationalCostType();
      } else {
        setOperationalCostType((TDDIOperationalCostType)value);
      }
      break;

    case VULNERABILITIES:
      if (value == null) {
        unsetVulnerabilities();
      } else {
        setVulnerabilities((java.util.List<TDDIVulnerability>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case KEY_VALUE_MAPS:
      return getKeyValueMaps();

    case FINANCIAL_VALUE:
      return getFinancialValue();

    case FINANCIAL_COST_TYPE:
      return getFinancialCostType();

    case OPERATIONAL_COST:
      return getOperationalCost();

    case OPERATIONAL_COST_TYPE:
      return getOperationalCostType();

    case VULNERABILITIES:
      return getVulnerabilities();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case KEY_VALUE_MAPS:
      return isSetKeyValueMaps();
    case FINANCIAL_VALUE:
      return isSetFinancialValue();
    case FINANCIAL_COST_TYPE:
      return isSetFinancialCostType();
    case OPERATIONAL_COST:
      return isSetOperationalCost();
    case OPERATIONAL_COST_TYPE:
      return isSetOperationalCostType();
    case VULNERABILITIES:
      return isSetVulnerabilities();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TDDIVulnerableItem)
      return this.equals((TDDIVulnerableItem)that);
    return false;
  }

  public boolean equals(TDDIVulnerableItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_Id = true;
    boolean that_present_Id = true;
    if (this_present_Id || that_present_Id) {
      if (!(this_present_Id && that_present_Id))
        return false;
      if (this.Id != that.Id)
        return false;
    }

    boolean this_present_Name = true && this.isSetName();
    boolean that_present_Name = true && that.isSetName();
    if (this_present_Name || that_present_Name) {
      if (!(this_present_Name && that_present_Name))
        return false;
      if (!this.Name.equals(that.Name))
        return false;
    }

    boolean this_present_Description = true && this.isSetDescription();
    boolean that_present_Description = true && that.isSetDescription();
    if (this_present_Description || that_present_Description) {
      if (!(this_present_Description && that_present_Description))
        return false;
      if (!this.Description.equals(that.Description))
        return false;
    }

    boolean this_present_KeyValueMaps = true && this.isSetKeyValueMaps();
    boolean that_present_KeyValueMaps = true && that.isSetKeyValueMaps();
    if (this_present_KeyValueMaps || that_present_KeyValueMaps) {
      if (!(this_present_KeyValueMaps && that_present_KeyValueMaps))
        return false;
      if (!this.KeyValueMaps.equals(that.KeyValueMaps))
        return false;
    }

    boolean this_present_FinancialValue = true;
    boolean that_present_FinancialValue = true;
    if (this_present_FinancialValue || that_present_FinancialValue) {
      if (!(this_present_FinancialValue && that_present_FinancialValue))
        return false;
      if (this.FinancialValue != that.FinancialValue)
        return false;
    }

    boolean this_present_FinancialCostType = true && this.isSetFinancialCostType();
    boolean that_present_FinancialCostType = true && that.isSetFinancialCostType();
    if (this_present_FinancialCostType || that_present_FinancialCostType) {
      if (!(this_present_FinancialCostType && that_present_FinancialCostType))
        return false;
      if (!this.FinancialCostType.equals(that.FinancialCostType))
        return false;
    }

    boolean this_present_OperationalCost = true;
    boolean that_present_OperationalCost = true;
    if (this_present_OperationalCost || that_present_OperationalCost) {
      if (!(this_present_OperationalCost && that_present_OperationalCost))
        return false;
      if (this.OperationalCost != that.OperationalCost)
        return false;
    }

    boolean this_present_OperationalCostType = true && this.isSetOperationalCostType();
    boolean that_present_OperationalCostType = true && that.isSetOperationalCostType();
    if (this_present_OperationalCostType || that_present_OperationalCostType) {
      if (!(this_present_OperationalCostType && that_present_OperationalCostType))
        return false;
      if (!this.OperationalCostType.equals(that.OperationalCostType))
        return false;
    }

    boolean this_present_Vulnerabilities = true && this.isSetVulnerabilities();
    boolean that_present_Vulnerabilities = true && that.isSetVulnerabilities();
    if (this_present_Vulnerabilities || that_present_Vulnerabilities) {
      if (!(this_present_Vulnerabilities && that_present_Vulnerabilities))
        return false;
      if (!this.Vulnerabilities.equals(that.Vulnerabilities))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(Id);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + Name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + Description.hashCode();

    hashCode = hashCode * 8191 + ((isSetKeyValueMaps()) ? 131071 : 524287);
    if (isSetKeyValueMaps())
      hashCode = hashCode * 8191 + KeyValueMaps.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(FinancialValue);

    hashCode = hashCode * 8191 + ((isSetFinancialCostType()) ? 131071 : 524287);
    if (isSetFinancialCostType())
      hashCode = hashCode * 8191 + FinancialCostType.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(OperationalCost);

    hashCode = hashCode * 8191 + ((isSetOperationalCostType()) ? 131071 : 524287);
    if (isSetOperationalCostType())
      hashCode = hashCode * 8191 + OperationalCostType.getValue();

    hashCode = hashCode * 8191 + ((isSetVulnerabilities()) ? 131071 : 524287);
    if (isSetVulnerabilities())
      hashCode = hashCode * 8191 + Vulnerabilities.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TDDIVulnerableItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Id, other.Id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Name, other.Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Description, other.Description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyValueMaps()).compareTo(other.isSetKeyValueMaps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyValueMaps()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.KeyValueMaps, other.KeyValueMaps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFinancialValue()).compareTo(other.isSetFinancialValue());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinancialValue()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.FinancialValue, other.FinancialValue);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFinancialCostType()).compareTo(other.isSetFinancialCostType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinancialCostType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.FinancialCostType, other.FinancialCostType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOperationalCost()).compareTo(other.isSetOperationalCost());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperationalCost()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.OperationalCost, other.OperationalCost);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOperationalCostType()).compareTo(other.isSetOperationalCostType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperationalCostType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.OperationalCostType, other.OperationalCostType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVulnerabilities()).compareTo(other.isSetVulnerabilities());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVulnerabilities()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Vulnerabilities, other.Vulnerabilities);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TDDIVulnerableItem(");
    boolean first = true;

    sb.append("Id:");
    sb.append(this.Id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("Name:");
    if (this.Name == null) {
      sb.append("null");
    } else {
      sb.append(this.Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Description:");
    if (this.Description == null) {
      sb.append("null");
    } else {
      sb.append(this.Description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("KeyValueMaps:");
    if (this.KeyValueMaps == null) {
      sb.append("null");
    } else {
      sb.append(this.KeyValueMaps);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("FinancialValue:");
    sb.append(this.FinancialValue);
    first = false;
    if (!first) sb.append(", ");
    sb.append("FinancialCostType:");
    if (this.FinancialCostType == null) {
      sb.append("null");
    } else {
      sb.append(this.FinancialCostType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("OperationalCost:");
    sb.append(this.OperationalCost);
    first = false;
    if (!first) sb.append(", ");
    sb.append("OperationalCostType:");
    if (this.OperationalCostType == null) {
      sb.append("null");
    } else {
      sb.append(this.OperationalCostType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Vulnerabilities:");
    if (this.Vulnerabilities == null) {
      sb.append("null");
    } else {
      sb.append(this.Vulnerabilities);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDDIVulnerableItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIVulnerableItemStandardScheme getScheme() {
      return new TDDIVulnerableItemStandardScheme();
    }
  }

  private static class TDDIVulnerableItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<TDDIVulnerableItem> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDDIVulnerableItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.Id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // KEY_VALUE_MAPS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list2792 = iprot.readListBegin();
                struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list2792.size);
                TDDIKeyValueMap _elem2793;
                for (int _i2794 = 0; _i2794 < _list2792.size; ++_i2794)
                {
                  _elem2793 = new TDDIKeyValueMap();
                  _elem2793.read(iprot);
                  struct.KeyValueMaps.add(_elem2793);
                }
                iprot.readListEnd();
              }
              struct.setKeyValueMapsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FINANCIAL_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.FinancialValue = iprot.readDouble();
              struct.setFinancialValueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FINANCIAL_COST_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.FinancialCostType = thriftContract.TDDIFinancialCostType.findByValue(iprot.readI32());
              struct.setFinancialCostTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // OPERATIONAL_COST
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.OperationalCost = iprot.readDouble();
              struct.setOperationalCostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // OPERATIONAL_COST_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.OperationalCostType = thriftContract.TDDIOperationalCostType.findByValue(iprot.readI32());
              struct.setOperationalCostTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // VULNERABILITIES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list2795 = iprot.readListBegin();
                struct.Vulnerabilities = new java.util.ArrayList<TDDIVulnerability>(_list2795.size);
                TDDIVulnerability _elem2796;
                for (int _i2797 = 0; _i2797 < _list2795.size; ++_i2797)
                {
                  _elem2796 = new TDDIVulnerability();
                  _elem2796.read(iprot);
                  struct.Vulnerabilities.add(_elem2796);
                }
                iprot.readListEnd();
              }
              struct.setVulnerabilitiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDDIVulnerableItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.Id);
      oprot.writeFieldEnd();
      if (struct.Name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.Name);
        oprot.writeFieldEnd();
      }
      if (struct.Description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.Description);
        oprot.writeFieldEnd();
      }
      if (struct.KeyValueMaps != null) {
        oprot.writeFieldBegin(KEY_VALUE_MAPS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.KeyValueMaps.size()));
          for (TDDIKeyValueMap _iter2798 : struct.KeyValueMaps)
          {
            _iter2798.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FINANCIAL_VALUE_FIELD_DESC);
      oprot.writeDouble(struct.FinancialValue);
      oprot.writeFieldEnd();
      if (struct.FinancialCostType != null) {
        oprot.writeFieldBegin(FINANCIAL_COST_TYPE_FIELD_DESC);
        oprot.writeI32(struct.FinancialCostType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(OPERATIONAL_COST_FIELD_DESC);
      oprot.writeDouble(struct.OperationalCost);
      oprot.writeFieldEnd();
      if (struct.OperationalCostType != null) {
        oprot.writeFieldBegin(OPERATIONAL_COST_TYPE_FIELD_DESC);
        oprot.writeI32(struct.OperationalCostType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.Vulnerabilities != null) {
        oprot.writeFieldBegin(VULNERABILITIES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.Vulnerabilities.size()));
          for (TDDIVulnerability _iter2799 : struct.Vulnerabilities)
          {
            _iter2799.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDDIVulnerableItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIVulnerableItemTupleScheme getScheme() {
      return new TDDIVulnerableItemTupleScheme();
    }
  }

  private static class TDDIVulnerableItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<TDDIVulnerableItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDDIVulnerableItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescription()) {
        optionals.set(2);
      }
      if (struct.isSetKeyValueMaps()) {
        optionals.set(3);
      }
      if (struct.isSetFinancialValue()) {
        optionals.set(4);
      }
      if (struct.isSetFinancialCostType()) {
        optionals.set(5);
      }
      if (struct.isSetOperationalCost()) {
        optionals.set(6);
      }
      if (struct.isSetOperationalCostType()) {
        optionals.set(7);
      }
      if (struct.isSetVulnerabilities()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetId()) {
        oprot.writeI64(struct.Id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.Name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.Description);
      }
      if (struct.isSetKeyValueMaps()) {
        {
          oprot.writeI32(struct.KeyValueMaps.size());
          for (TDDIKeyValueMap _iter2800 : struct.KeyValueMaps)
          {
            _iter2800.write(oprot);
          }
        }
      }
      if (struct.isSetFinancialValue()) {
        oprot.writeDouble(struct.FinancialValue);
      }
      if (struct.isSetFinancialCostType()) {
        oprot.writeI32(struct.FinancialCostType.getValue());
      }
      if (struct.isSetOperationalCost()) {
        oprot.writeDouble(struct.OperationalCost);
      }
      if (struct.isSetOperationalCostType()) {
        oprot.writeI32(struct.OperationalCostType.getValue());
      }
      if (struct.isSetVulnerabilities()) {
        {
          oprot.writeI32(struct.Vulnerabilities.size());
          for (TDDIVulnerability _iter2801 : struct.Vulnerabilities)
          {
            _iter2801.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDDIVulnerableItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.Id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.Name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.Description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list2802 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list2802.size);
          TDDIKeyValueMap _elem2803;
          for (int _i2804 = 0; _i2804 < _list2802.size; ++_i2804)
          {
            _elem2803 = new TDDIKeyValueMap();
            _elem2803.read(iprot);
            struct.KeyValueMaps.add(_elem2803);
          }
        }
        struct.setKeyValueMapsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.FinancialValue = iprot.readDouble();
        struct.setFinancialValueIsSet(true);
      }
      if (incoming.get(5)) {
        struct.FinancialCostType = thriftContract.TDDIFinancialCostType.findByValue(iprot.readI32());
        struct.setFinancialCostTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.OperationalCost = iprot.readDouble();
        struct.setOperationalCostIsSet(true);
      }
      if (incoming.get(7)) {
        struct.OperationalCostType = thriftContract.TDDIOperationalCostType.findByValue(iprot.readI32());
        struct.setOperationalCostTypeIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list2805 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.Vulnerabilities = new java.util.ArrayList<TDDIVulnerability>(_list2805.size);
          TDDIVulnerability _elem2806;
          for (int _i2807 = 0; _i2807 < _list2805.size; ++_i2807)
          {
            _elem2806 = new TDDIVulnerability();
            _elem2806.read(iprot);
            struct.Vulnerabilities.add(_elem2806);
          }
        }
        struct.setVulnerabilitiesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

