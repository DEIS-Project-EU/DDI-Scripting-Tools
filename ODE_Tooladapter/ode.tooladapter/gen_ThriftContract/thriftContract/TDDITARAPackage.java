/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-11-04")
public class TDDITARAPackage implements org.apache.thrift.TBase<TDDITARAPackage, TDDITARAPackage._Fields>, java.io.Serializable, Cloneable, Comparable<TDDITARAPackage> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDITARAPackage");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("Id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("Name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("Description", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField KEY_VALUE_MAPS_FIELD_DESC = new org.apache.thrift.protocol.TField("KeyValueMaps", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField IDENTIFIED_RISKS_FIELD_DESC = new org.apache.thrift.protocol.TField("IdentifiedRisks", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField CONTROLS_FIELD_DESC = new org.apache.thrift.protocol.TField("Controls", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField CONSIDERED_ASSETS_FIELD_DESC = new org.apache.thrift.protocol.TField("ConsideredAssets", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField CONSIDERED_THREAT_AGENTS_FIELD_DESC = new org.apache.thrift.protocol.TField("ConsideredThreatAgents", org.apache.thrift.protocol.TType.LIST, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TDDITARAPackageStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TDDITARAPackageTupleSchemeFactory();

  public long Id; // required
  public java.lang.String Name; // required
  public java.lang.String Description; // required
  public java.util.List<TDDIKeyValueMap> KeyValueMaps; // required
  public java.util.List<TDDISecurityRisk> IdentifiedRisks; // required
  public java.util.List<TDDISecurityControl> Controls; // required
  public java.util.List<TDDIAbstractAsset> ConsideredAssets; // required
  public java.util.List<TDDIAbstractThreatAgent> ConsideredThreatAgents; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "Id"),
    NAME((short)2, "Name"),
    DESCRIPTION((short)3, "Description"),
    KEY_VALUE_MAPS((short)4, "KeyValueMaps"),
    IDENTIFIED_RISKS((short)5, "IdentifiedRisks"),
    CONTROLS((short)6, "Controls"),
    CONSIDERED_ASSETS((short)7, "ConsideredAssets"),
    CONSIDERED_THREAT_AGENTS((short)8, "ConsideredThreatAgents");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // DESCRIPTION
          return DESCRIPTION;
        case 4: // KEY_VALUE_MAPS
          return KEY_VALUE_MAPS;
        case 5: // IDENTIFIED_RISKS
          return IDENTIFIED_RISKS;
        case 6: // CONTROLS
          return CONTROLS;
        case 7: // CONSIDERED_ASSETS
          return CONSIDERED_ASSETS;
        case 8: // CONSIDERED_THREAT_AGENTS
          return CONSIDERED_THREAT_AGENTS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("Id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("Description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEY_VALUE_MAPS, new org.apache.thrift.meta_data.FieldMetaData("KeyValueMaps", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIKeyValueMap.class))));
    tmpMap.put(_Fields.IDENTIFIED_RISKS, new org.apache.thrift.meta_data.FieldMetaData("IdentifiedRisks", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDISecurityRisk.class))));
    tmpMap.put(_Fields.CONTROLS, new org.apache.thrift.meta_data.FieldMetaData("Controls", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDISecurityControl.class))));
    tmpMap.put(_Fields.CONSIDERED_ASSETS, new org.apache.thrift.meta_data.FieldMetaData("ConsideredAssets", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIAbstractAsset.class))));
    tmpMap.put(_Fields.CONSIDERED_THREAT_AGENTS, new org.apache.thrift.meta_data.FieldMetaData("ConsideredThreatAgents", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIAbstractThreatAgent.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDITARAPackage.class, metaDataMap);
  }

  public TDDITARAPackage() {
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

  }

  public TDDITARAPackage(
    long Id,
    java.lang.String Name,
    java.lang.String Description,
    java.util.List<TDDIKeyValueMap> KeyValueMaps,
    java.util.List<TDDISecurityRisk> IdentifiedRisks,
    java.util.List<TDDISecurityControl> Controls,
    java.util.List<TDDIAbstractAsset> ConsideredAssets,
    java.util.List<TDDIAbstractThreatAgent> ConsideredThreatAgents)
  {
    this();
    this.Id = Id;
    setIdIsSet(true);
    this.Name = Name;
    this.Description = Description;
    this.KeyValueMaps = KeyValueMaps;
    this.IdentifiedRisks = IdentifiedRisks;
    this.Controls = Controls;
    this.ConsideredAssets = ConsideredAssets;
    this.ConsideredThreatAgents = ConsideredThreatAgents;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDDITARAPackage(TDDITARAPackage other) {
    __isset_bitfield = other.__isset_bitfield;
    this.Id = other.Id;
    if (other.isSetName()) {
      this.Name = other.Name;
    }
    if (other.isSetDescription()) {
      this.Description = other.Description;
    }
    if (other.isSetKeyValueMaps()) {
      java.util.List<TDDIKeyValueMap> __this__KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(other.KeyValueMaps.size());
      for (TDDIKeyValueMap other_element : other.KeyValueMaps) {
        __this__KeyValueMaps.add(new TDDIKeyValueMap(other_element));
      }
      this.KeyValueMaps = __this__KeyValueMaps;
    }
    if (other.isSetIdentifiedRisks()) {
      java.util.List<TDDISecurityRisk> __this__IdentifiedRisks = new java.util.ArrayList<TDDISecurityRisk>(other.IdentifiedRisks.size());
      for (TDDISecurityRisk other_element : other.IdentifiedRisks) {
        __this__IdentifiedRisks.add(new TDDISecurityRisk(other_element));
      }
      this.IdentifiedRisks = __this__IdentifiedRisks;
    }
    if (other.isSetControls()) {
      java.util.List<TDDISecurityControl> __this__Controls = new java.util.ArrayList<TDDISecurityControl>(other.Controls.size());
      for (TDDISecurityControl other_element : other.Controls) {
        __this__Controls.add(new TDDISecurityControl(other_element));
      }
      this.Controls = __this__Controls;
    }
    if (other.isSetConsideredAssets()) {
      java.util.List<TDDIAbstractAsset> __this__ConsideredAssets = new java.util.ArrayList<TDDIAbstractAsset>(other.ConsideredAssets.size());
      for (TDDIAbstractAsset other_element : other.ConsideredAssets) {
        __this__ConsideredAssets.add(new TDDIAbstractAsset(other_element));
      }
      this.ConsideredAssets = __this__ConsideredAssets;
    }
    if (other.isSetConsideredThreatAgents()) {
      java.util.List<TDDIAbstractThreatAgent> __this__ConsideredThreatAgents = new java.util.ArrayList<TDDIAbstractThreatAgent>(other.ConsideredThreatAgents.size());
      for (TDDIAbstractThreatAgent other_element : other.ConsideredThreatAgents) {
        __this__ConsideredThreatAgents.add(new TDDIAbstractThreatAgent(other_element));
      }
      this.ConsideredThreatAgents = __this__ConsideredThreatAgents;
    }
  }

  public TDDITARAPackage deepCopy() {
    return new TDDITARAPackage(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.Id = 0;
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

    this.IdentifiedRisks = null;
    this.Controls = null;
    this.ConsideredAssets = null;
    this.ConsideredThreatAgents = null;
  }

  public long getId() {
    return this.Id;
  }

  public TDDITARAPackage setId(long Id) {
    this.Id = Id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field Id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.Name;
  }

  public TDDITARAPackage setName(java.lang.String Name) {
    this.Name = Name;
    return this;
  }

  public void unsetName() {
    this.Name = null;
  }

  /** Returns true if field Name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.Name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.Name = null;
    }
  }

  public java.lang.String getDescription() {
    return this.Description;
  }

  public TDDITARAPackage setDescription(java.lang.String Description) {
    this.Description = Description;
    return this;
  }

  public void unsetDescription() {
    this.Description = null;
  }

  /** Returns true if field Description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.Description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.Description = null;
    }
  }

  public int getKeyValueMapsSize() {
    return (this.KeyValueMaps == null) ? 0 : this.KeyValueMaps.size();
  }

  public java.util.Iterator<TDDIKeyValueMap> getKeyValueMapsIterator() {
    return (this.KeyValueMaps == null) ? null : this.KeyValueMaps.iterator();
  }

  public void addToKeyValueMaps(TDDIKeyValueMap elem) {
    if (this.KeyValueMaps == null) {
      this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();
    }
    this.KeyValueMaps.add(elem);
  }

  public java.util.List<TDDIKeyValueMap> getKeyValueMaps() {
    return this.KeyValueMaps;
  }

  public TDDITARAPackage setKeyValueMaps(java.util.List<TDDIKeyValueMap> KeyValueMaps) {
    this.KeyValueMaps = KeyValueMaps;
    return this;
  }

  public void unsetKeyValueMaps() {
    this.KeyValueMaps = null;
  }

  /** Returns true if field KeyValueMaps is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyValueMaps() {
    return this.KeyValueMaps != null;
  }

  public void setKeyValueMapsIsSet(boolean value) {
    if (!value) {
      this.KeyValueMaps = null;
    }
  }

  public int getIdentifiedRisksSize() {
    return (this.IdentifiedRisks == null) ? 0 : this.IdentifiedRisks.size();
  }

  public java.util.Iterator<TDDISecurityRisk> getIdentifiedRisksIterator() {
    return (this.IdentifiedRisks == null) ? null : this.IdentifiedRisks.iterator();
  }

  public void addToIdentifiedRisks(TDDISecurityRisk elem) {
    if (this.IdentifiedRisks == null) {
      this.IdentifiedRisks = new java.util.ArrayList<TDDISecurityRisk>();
    }
    this.IdentifiedRisks.add(elem);
  }

  public java.util.List<TDDISecurityRisk> getIdentifiedRisks() {
    return this.IdentifiedRisks;
  }

  public TDDITARAPackage setIdentifiedRisks(java.util.List<TDDISecurityRisk> IdentifiedRisks) {
    this.IdentifiedRisks = IdentifiedRisks;
    return this;
  }

  public void unsetIdentifiedRisks() {
    this.IdentifiedRisks = null;
  }

  /** Returns true if field IdentifiedRisks is set (has been assigned a value) and false otherwise */
  public boolean isSetIdentifiedRisks() {
    return this.IdentifiedRisks != null;
  }

  public void setIdentifiedRisksIsSet(boolean value) {
    if (!value) {
      this.IdentifiedRisks = null;
    }
  }

  public int getControlsSize() {
    return (this.Controls == null) ? 0 : this.Controls.size();
  }

  public java.util.Iterator<TDDISecurityControl> getControlsIterator() {
    return (this.Controls == null) ? null : this.Controls.iterator();
  }

  public void addToControls(TDDISecurityControl elem) {
    if (this.Controls == null) {
      this.Controls = new java.util.ArrayList<TDDISecurityControl>();
    }
    this.Controls.add(elem);
  }

  public java.util.List<TDDISecurityControl> getControls() {
    return this.Controls;
  }

  public TDDITARAPackage setControls(java.util.List<TDDISecurityControl> Controls) {
    this.Controls = Controls;
    return this;
  }

  public void unsetControls() {
    this.Controls = null;
  }

  /** Returns true if field Controls is set (has been assigned a value) and false otherwise */
  public boolean isSetControls() {
    return this.Controls != null;
  }

  public void setControlsIsSet(boolean value) {
    if (!value) {
      this.Controls = null;
    }
  }

  public int getConsideredAssetsSize() {
    return (this.ConsideredAssets == null) ? 0 : this.ConsideredAssets.size();
  }

  public java.util.Iterator<TDDIAbstractAsset> getConsideredAssetsIterator() {
    return (this.ConsideredAssets == null) ? null : this.ConsideredAssets.iterator();
  }

  public void addToConsideredAssets(TDDIAbstractAsset elem) {
    if (this.ConsideredAssets == null) {
      this.ConsideredAssets = new java.util.ArrayList<TDDIAbstractAsset>();
    }
    this.ConsideredAssets.add(elem);
  }

  public java.util.List<TDDIAbstractAsset> getConsideredAssets() {
    return this.ConsideredAssets;
  }

  public TDDITARAPackage setConsideredAssets(java.util.List<TDDIAbstractAsset> ConsideredAssets) {
    this.ConsideredAssets = ConsideredAssets;
    return this;
  }

  public void unsetConsideredAssets() {
    this.ConsideredAssets = null;
  }

  /** Returns true if field ConsideredAssets is set (has been assigned a value) and false otherwise */
  public boolean isSetConsideredAssets() {
    return this.ConsideredAssets != null;
  }

  public void setConsideredAssetsIsSet(boolean value) {
    if (!value) {
      this.ConsideredAssets = null;
    }
  }

  public int getConsideredThreatAgentsSize() {
    return (this.ConsideredThreatAgents == null) ? 0 : this.ConsideredThreatAgents.size();
  }

  public java.util.Iterator<TDDIAbstractThreatAgent> getConsideredThreatAgentsIterator() {
    return (this.ConsideredThreatAgents == null) ? null : this.ConsideredThreatAgents.iterator();
  }

  public void addToConsideredThreatAgents(TDDIAbstractThreatAgent elem) {
    if (this.ConsideredThreatAgents == null) {
      this.ConsideredThreatAgents = new java.util.ArrayList<TDDIAbstractThreatAgent>();
    }
    this.ConsideredThreatAgents.add(elem);
  }

  public java.util.List<TDDIAbstractThreatAgent> getConsideredThreatAgents() {
    return this.ConsideredThreatAgents;
  }

  public TDDITARAPackage setConsideredThreatAgents(java.util.List<TDDIAbstractThreatAgent> ConsideredThreatAgents) {
    this.ConsideredThreatAgents = ConsideredThreatAgents;
    return this;
  }

  public void unsetConsideredThreatAgents() {
    this.ConsideredThreatAgents = null;
  }

  /** Returns true if field ConsideredThreatAgents is set (has been assigned a value) and false otherwise */
  public boolean isSetConsideredThreatAgents() {
    return this.ConsideredThreatAgents != null;
  }

  public void setConsideredThreatAgentsIsSet(boolean value) {
    if (!value) {
      this.ConsideredThreatAgents = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case KEY_VALUE_MAPS:
      if (value == null) {
        unsetKeyValueMaps();
      } else {
        setKeyValueMaps((java.util.List<TDDIKeyValueMap>)value);
      }
      break;

    case IDENTIFIED_RISKS:
      if (value == null) {
        unsetIdentifiedRisks();
      } else {
        setIdentifiedRisks((java.util.List<TDDISecurityRisk>)value);
      }
      break;

    case CONTROLS:
      if (value == null) {
        unsetControls();
      } else {
        setControls((java.util.List<TDDISecurityControl>)value);
      }
      break;

    case CONSIDERED_ASSETS:
      if (value == null) {
        unsetConsideredAssets();
      } else {
        setConsideredAssets((java.util.List<TDDIAbstractAsset>)value);
      }
      break;

    case CONSIDERED_THREAT_AGENTS:
      if (value == null) {
        unsetConsideredThreatAgents();
      } else {
        setConsideredThreatAgents((java.util.List<TDDIAbstractThreatAgent>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case KEY_VALUE_MAPS:
      return getKeyValueMaps();

    case IDENTIFIED_RISKS:
      return getIdentifiedRisks();

    case CONTROLS:
      return getControls();

    case CONSIDERED_ASSETS:
      return getConsideredAssets();

    case CONSIDERED_THREAT_AGENTS:
      return getConsideredThreatAgents();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case KEY_VALUE_MAPS:
      return isSetKeyValueMaps();
    case IDENTIFIED_RISKS:
      return isSetIdentifiedRisks();
    case CONTROLS:
      return isSetControls();
    case CONSIDERED_ASSETS:
      return isSetConsideredAssets();
    case CONSIDERED_THREAT_AGENTS:
      return isSetConsideredThreatAgents();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TDDITARAPackage)
      return this.equals((TDDITARAPackage)that);
    return false;
  }

  public boolean equals(TDDITARAPackage that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_Id = true;
    boolean that_present_Id = true;
    if (this_present_Id || that_present_Id) {
      if (!(this_present_Id && that_present_Id))
        return false;
      if (this.Id != that.Id)
        return false;
    }

    boolean this_present_Name = true && this.isSetName();
    boolean that_present_Name = true && that.isSetName();
    if (this_present_Name || that_present_Name) {
      if (!(this_present_Name && that_present_Name))
        return false;
      if (!this.Name.equals(that.Name))
        return false;
    }

    boolean this_present_Description = true && this.isSetDescription();
    boolean that_present_Description = true && that.isSetDescription();
    if (this_present_Description || that_present_Description) {
      if (!(this_present_Description && that_present_Description))
        return false;
      if (!this.Description.equals(that.Description))
        return false;
    }

    boolean this_present_KeyValueMaps = true && this.isSetKeyValueMaps();
    boolean that_present_KeyValueMaps = true && that.isSetKeyValueMaps();
    if (this_present_KeyValueMaps || that_present_KeyValueMaps) {
      if (!(this_present_KeyValueMaps && that_present_KeyValueMaps))
        return false;
      if (!this.KeyValueMaps.equals(that.KeyValueMaps))
        return false;
    }

    boolean this_present_IdentifiedRisks = true && this.isSetIdentifiedRisks();
    boolean that_present_IdentifiedRisks = true && that.isSetIdentifiedRisks();
    if (this_present_IdentifiedRisks || that_present_IdentifiedRisks) {
      if (!(this_present_IdentifiedRisks && that_present_IdentifiedRisks))
        return false;
      if (!this.IdentifiedRisks.equals(that.IdentifiedRisks))
        return false;
    }

    boolean this_present_Controls = true && this.isSetControls();
    boolean that_present_Controls = true && that.isSetControls();
    if (this_present_Controls || that_present_Controls) {
      if (!(this_present_Controls && that_present_Controls))
        return false;
      if (!this.Controls.equals(that.Controls))
        return false;
    }

    boolean this_present_ConsideredAssets = true && this.isSetConsideredAssets();
    boolean that_present_ConsideredAssets = true && that.isSetConsideredAssets();
    if (this_present_ConsideredAssets || that_present_ConsideredAssets) {
      if (!(this_present_ConsideredAssets && that_present_ConsideredAssets))
        return false;
      if (!this.ConsideredAssets.equals(that.ConsideredAssets))
        return false;
    }

    boolean this_present_ConsideredThreatAgents = true && this.isSetConsideredThreatAgents();
    boolean that_present_ConsideredThreatAgents = true && that.isSetConsideredThreatAgents();
    if (this_present_ConsideredThreatAgents || that_present_ConsideredThreatAgents) {
      if (!(this_present_ConsideredThreatAgents && that_present_ConsideredThreatAgents))
        return false;
      if (!this.ConsideredThreatAgents.equals(that.ConsideredThreatAgents))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(Id);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + Name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + Description.hashCode();

    hashCode = hashCode * 8191 + ((isSetKeyValueMaps()) ? 131071 : 524287);
    if (isSetKeyValueMaps())
      hashCode = hashCode * 8191 + KeyValueMaps.hashCode();

    hashCode = hashCode * 8191 + ((isSetIdentifiedRisks()) ? 131071 : 524287);
    if (isSetIdentifiedRisks())
      hashCode = hashCode * 8191 + IdentifiedRisks.hashCode();

    hashCode = hashCode * 8191 + ((isSetControls()) ? 131071 : 524287);
    if (isSetControls())
      hashCode = hashCode * 8191 + Controls.hashCode();

    hashCode = hashCode * 8191 + ((isSetConsideredAssets()) ? 131071 : 524287);
    if (isSetConsideredAssets())
      hashCode = hashCode * 8191 + ConsideredAssets.hashCode();

    hashCode = hashCode * 8191 + ((isSetConsideredThreatAgents()) ? 131071 : 524287);
    if (isSetConsideredThreatAgents())
      hashCode = hashCode * 8191 + ConsideredThreatAgents.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TDDITARAPackage other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Id, other.Id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Name, other.Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Description, other.Description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyValueMaps()).compareTo(other.isSetKeyValueMaps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyValueMaps()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.KeyValueMaps, other.KeyValueMaps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdentifiedRisks()).compareTo(other.isSetIdentifiedRisks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdentifiedRisks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.IdentifiedRisks, other.IdentifiedRisks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetControls()).compareTo(other.isSetControls());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetControls()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Controls, other.Controls);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetConsideredAssets()).compareTo(other.isSetConsideredAssets());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsideredAssets()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ConsideredAssets, other.ConsideredAssets);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetConsideredThreatAgents()).compareTo(other.isSetConsideredThreatAgents());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConsideredThreatAgents()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ConsideredThreatAgents, other.ConsideredThreatAgents);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TDDITARAPackage(");
    boolean first = true;

    sb.append("Id:");
    sb.append(this.Id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("Name:");
    if (this.Name == null) {
      sb.append("null");
    } else {
      sb.append(this.Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Description:");
    if (this.Description == null) {
      sb.append("null");
    } else {
      sb.append(this.Description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("KeyValueMaps:");
    if (this.KeyValueMaps == null) {
      sb.append("null");
    } else {
      sb.append(this.KeyValueMaps);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("IdentifiedRisks:");
    if (this.IdentifiedRisks == null) {
      sb.append("null");
    } else {
      sb.append(this.IdentifiedRisks);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Controls:");
    if (this.Controls == null) {
      sb.append("null");
    } else {
      sb.append(this.Controls);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ConsideredAssets:");
    if (this.ConsideredAssets == null) {
      sb.append("null");
    } else {
      sb.append(this.ConsideredAssets);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ConsideredThreatAgents:");
    if (this.ConsideredThreatAgents == null) {
      sb.append("null");
    } else {
      sb.append(this.ConsideredThreatAgents);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDDITARAPackageStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDITARAPackageStandardScheme getScheme() {
      return new TDDITARAPackageStandardScheme();
    }
  }

  private static class TDDITARAPackageStandardScheme extends org.apache.thrift.scheme.StandardScheme<TDDITARAPackage> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDDITARAPackage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.Id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // KEY_VALUE_MAPS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3024 = iprot.readListBegin();
                struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list3024.size);
                TDDIKeyValueMap _elem3025;
                for (int _i3026 = 0; _i3026 < _list3024.size; ++_i3026)
                {
                  _elem3025 = new TDDIKeyValueMap();
                  _elem3025.read(iprot);
                  struct.KeyValueMaps.add(_elem3025);
                }
                iprot.readListEnd();
              }
              struct.setKeyValueMapsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IDENTIFIED_RISKS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3027 = iprot.readListBegin();
                struct.IdentifiedRisks = new java.util.ArrayList<TDDISecurityRisk>(_list3027.size);
                TDDISecurityRisk _elem3028;
                for (int _i3029 = 0; _i3029 < _list3027.size; ++_i3029)
                {
                  _elem3028 = new TDDISecurityRisk();
                  _elem3028.read(iprot);
                  struct.IdentifiedRisks.add(_elem3028);
                }
                iprot.readListEnd();
              }
              struct.setIdentifiedRisksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CONTROLS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3030 = iprot.readListBegin();
                struct.Controls = new java.util.ArrayList<TDDISecurityControl>(_list3030.size);
                TDDISecurityControl _elem3031;
                for (int _i3032 = 0; _i3032 < _list3030.size; ++_i3032)
                {
                  _elem3031 = new TDDISecurityControl();
                  _elem3031.read(iprot);
                  struct.Controls.add(_elem3031);
                }
                iprot.readListEnd();
              }
              struct.setControlsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONSIDERED_ASSETS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3033 = iprot.readListBegin();
                struct.ConsideredAssets = new java.util.ArrayList<TDDIAbstractAsset>(_list3033.size);
                TDDIAbstractAsset _elem3034;
                for (int _i3035 = 0; _i3035 < _list3033.size; ++_i3035)
                {
                  _elem3034 = new TDDIAbstractAsset();
                  _elem3034.read(iprot);
                  struct.ConsideredAssets.add(_elem3034);
                }
                iprot.readListEnd();
              }
              struct.setConsideredAssetsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CONSIDERED_THREAT_AGENTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3036 = iprot.readListBegin();
                struct.ConsideredThreatAgents = new java.util.ArrayList<TDDIAbstractThreatAgent>(_list3036.size);
                TDDIAbstractThreatAgent _elem3037;
                for (int _i3038 = 0; _i3038 < _list3036.size; ++_i3038)
                {
                  _elem3037 = new TDDIAbstractThreatAgent();
                  _elem3037.read(iprot);
                  struct.ConsideredThreatAgents.add(_elem3037);
                }
                iprot.readListEnd();
              }
              struct.setConsideredThreatAgentsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDDITARAPackage struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.Id);
      oprot.writeFieldEnd();
      if (struct.Name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.Name);
        oprot.writeFieldEnd();
      }
      if (struct.Description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.Description);
        oprot.writeFieldEnd();
      }
      if (struct.KeyValueMaps != null) {
        oprot.writeFieldBegin(KEY_VALUE_MAPS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.KeyValueMaps.size()));
          for (TDDIKeyValueMap _iter3039 : struct.KeyValueMaps)
          {
            _iter3039.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.IdentifiedRisks != null) {
        oprot.writeFieldBegin(IDENTIFIED_RISKS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.IdentifiedRisks.size()));
          for (TDDISecurityRisk _iter3040 : struct.IdentifiedRisks)
          {
            _iter3040.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.Controls != null) {
        oprot.writeFieldBegin(CONTROLS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.Controls.size()));
          for (TDDISecurityControl _iter3041 : struct.Controls)
          {
            _iter3041.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.ConsideredAssets != null) {
        oprot.writeFieldBegin(CONSIDERED_ASSETS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.ConsideredAssets.size()));
          for (TDDIAbstractAsset _iter3042 : struct.ConsideredAssets)
          {
            _iter3042.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.ConsideredThreatAgents != null) {
        oprot.writeFieldBegin(CONSIDERED_THREAT_AGENTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.ConsideredThreatAgents.size()));
          for (TDDIAbstractThreatAgent _iter3043 : struct.ConsideredThreatAgents)
          {
            _iter3043.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDDITARAPackageTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDITARAPackageTupleScheme getScheme() {
      return new TDDITARAPackageTupleScheme();
    }
  }

  private static class TDDITARAPackageTupleScheme extends org.apache.thrift.scheme.TupleScheme<TDDITARAPackage> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDDITARAPackage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescription()) {
        optionals.set(2);
      }
      if (struct.isSetKeyValueMaps()) {
        optionals.set(3);
      }
      if (struct.isSetIdentifiedRisks()) {
        optionals.set(4);
      }
      if (struct.isSetControls()) {
        optionals.set(5);
      }
      if (struct.isSetConsideredAssets()) {
        optionals.set(6);
      }
      if (struct.isSetConsideredThreatAgents()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetId()) {
        oprot.writeI64(struct.Id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.Name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.Description);
      }
      if (struct.isSetKeyValueMaps()) {
        {
          oprot.writeI32(struct.KeyValueMaps.size());
          for (TDDIKeyValueMap _iter3044 : struct.KeyValueMaps)
          {
            _iter3044.write(oprot);
          }
        }
      }
      if (struct.isSetIdentifiedRisks()) {
        {
          oprot.writeI32(struct.IdentifiedRisks.size());
          for (TDDISecurityRisk _iter3045 : struct.IdentifiedRisks)
          {
            _iter3045.write(oprot);
          }
        }
      }
      if (struct.isSetControls()) {
        {
          oprot.writeI32(struct.Controls.size());
          for (TDDISecurityControl _iter3046 : struct.Controls)
          {
            _iter3046.write(oprot);
          }
        }
      }
      if (struct.isSetConsideredAssets()) {
        {
          oprot.writeI32(struct.ConsideredAssets.size());
          for (TDDIAbstractAsset _iter3047 : struct.ConsideredAssets)
          {
            _iter3047.write(oprot);
          }
        }
      }
      if (struct.isSetConsideredThreatAgents()) {
        {
          oprot.writeI32(struct.ConsideredThreatAgents.size());
          for (TDDIAbstractThreatAgent _iter3048 : struct.ConsideredThreatAgents)
          {
            _iter3048.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDDITARAPackage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.Id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.Name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.Description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list3049 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list3049.size);
          TDDIKeyValueMap _elem3050;
          for (int _i3051 = 0; _i3051 < _list3049.size; ++_i3051)
          {
            _elem3050 = new TDDIKeyValueMap();
            _elem3050.read(iprot);
            struct.KeyValueMaps.add(_elem3050);
          }
        }
        struct.setKeyValueMapsIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list3052 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.IdentifiedRisks = new java.util.ArrayList<TDDISecurityRisk>(_list3052.size);
          TDDISecurityRisk _elem3053;
          for (int _i3054 = 0; _i3054 < _list3052.size; ++_i3054)
          {
            _elem3053 = new TDDISecurityRisk();
            _elem3053.read(iprot);
            struct.IdentifiedRisks.add(_elem3053);
          }
        }
        struct.setIdentifiedRisksIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list3055 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.Controls = new java.util.ArrayList<TDDISecurityControl>(_list3055.size);
          TDDISecurityControl _elem3056;
          for (int _i3057 = 0; _i3057 < _list3055.size; ++_i3057)
          {
            _elem3056 = new TDDISecurityControl();
            _elem3056.read(iprot);
            struct.Controls.add(_elem3056);
          }
        }
        struct.setControlsIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list3058 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.ConsideredAssets = new java.util.ArrayList<TDDIAbstractAsset>(_list3058.size);
          TDDIAbstractAsset _elem3059;
          for (int _i3060 = 0; _i3060 < _list3058.size; ++_i3060)
          {
            _elem3059 = new TDDIAbstractAsset();
            _elem3059.read(iprot);
            struct.ConsideredAssets.add(_elem3059);
          }
        }
        struct.setConsideredAssetsIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list3061 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.ConsideredThreatAgents = new java.util.ArrayList<TDDIAbstractThreatAgent>(_list3061.size);
          TDDIAbstractThreatAgent _elem3062;
          for (int _i3063 = 0; _i3063 < _list3061.size; ++_i3063)
          {
            _elem3062 = new TDDIAbstractThreatAgent();
            _elem3062.read(iprot);
            struct.ConsideredThreatAgents.add(_elem3062);
          }
        }
        struct.setConsideredThreatAgentsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

