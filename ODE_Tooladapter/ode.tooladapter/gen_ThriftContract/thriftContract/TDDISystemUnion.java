/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class TDDISystemUnion extends org.apache.thrift.TUnion<TDDISystemUnion, TDDISystemUnion._Fields> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDISystemUnion");
  private static final org.apache.thrift.protocol.TField SYSTEM_FIELD_DESC = new org.apache.thrift.protocol.TField("System", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField PHYSICAL_COMPONENT_FIELD_DESC = new org.apache.thrift.protocol.TField("PhysicalComponent", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField LOGICAL_COMPONENT_FIELD_DESC = new org.apache.thrift.protocol.TField("LogicalComponent", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField SAFETY_RELATED_SYSTEM_FIELD_DESC = new org.apache.thrift.protocol.TField("SafetyRelatedSystem", org.apache.thrift.protocol.TType.STRUCT, (short)4);

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SYSTEM((short)1, "System"),
    PHYSICAL_COMPONENT((short)2, "PhysicalComponent"),
    LOGICAL_COMPONENT((short)3, "LogicalComponent"),
    SAFETY_RELATED_SYSTEM((short)4, "SafetyRelatedSystem");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SYSTEM
          return SYSTEM;
        case 2: // PHYSICAL_COMPONENT
          return PHYSICAL_COMPONENT;
        case 3: // LOGICAL_COMPONENT
          return LOGICAL_COMPONENT;
        case 4: // SAFETY_RELATED_SYSTEM
          return SAFETY_RELATED_SYSTEM;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SYSTEM, new org.apache.thrift.meta_data.FieldMetaData("System", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDISystem.class)));
    tmpMap.put(_Fields.PHYSICAL_COMPONENT, new org.apache.thrift.meta_data.FieldMetaData("PhysicalComponent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIPhysicalComponent.class)));
    tmpMap.put(_Fields.LOGICAL_COMPONENT, new org.apache.thrift.meta_data.FieldMetaData("LogicalComponent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDILogicalComponent.class)));
    tmpMap.put(_Fields.SAFETY_RELATED_SYSTEM, new org.apache.thrift.meta_data.FieldMetaData("SafetyRelatedSystem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDISafetyRelatedSystem.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDISystemUnion.class, metaDataMap);
  }

  public TDDISystemUnion() {
    super();
  }

  public TDDISystemUnion(_Fields setField, java.lang.Object value) {
    super(setField, value);
  }

  public TDDISystemUnion(TDDISystemUnion other) {
    super(other);
  }
  public TDDISystemUnion deepCopy() {
    return new TDDISystemUnion(this);
  }

  public static TDDISystemUnion System(TDDISystem value) {
    TDDISystemUnion x = new TDDISystemUnion();
    x.setSystem(value);
    return x;
  }

  public static TDDISystemUnion PhysicalComponent(TDDIPhysicalComponent value) {
    TDDISystemUnion x = new TDDISystemUnion();
    x.setPhysicalComponent(value);
    return x;
  }

  public static TDDISystemUnion LogicalComponent(TDDILogicalComponent value) {
    TDDISystemUnion x = new TDDISystemUnion();
    x.setLogicalComponent(value);
    return x;
  }

  public static TDDISystemUnion SafetyRelatedSystem(TDDISafetyRelatedSystem value) {
    TDDISystemUnion x = new TDDISystemUnion();
    x.setSafetyRelatedSystem(value);
    return x;
  }


  @Override
  protected void checkType(_Fields setField, java.lang.Object value) throws java.lang.ClassCastException {
    switch (setField) {
      case SYSTEM:
        if (value instanceof TDDISystem) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDISystem for field 'System', but got " + value.getClass().getSimpleName());
      case PHYSICAL_COMPONENT:
        if (value instanceof TDDIPhysicalComponent) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDIPhysicalComponent for field 'PhysicalComponent', but got " + value.getClass().getSimpleName());
      case LOGICAL_COMPONENT:
        if (value instanceof TDDILogicalComponent) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDILogicalComponent for field 'LogicalComponent', but got " + value.getClass().getSimpleName());
      case SAFETY_RELATED_SYSTEM:
        if (value instanceof TDDISafetyRelatedSystem) {
          break;
        }
        throw new java.lang.ClassCastException("Was expecting value of type TDDISafetyRelatedSystem for field 'SafetyRelatedSystem', but got " + value.getClass().getSimpleName());
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected java.lang.Object standardSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TField field) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(field.id);
    if (setField != null) {
      switch (setField) {
        case SYSTEM:
          if (field.type == SYSTEM_FIELD_DESC.type) {
            TDDISystem System;
            System = new TDDISystem();
            System.read(iprot);
            return System;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case PHYSICAL_COMPONENT:
          if (field.type == PHYSICAL_COMPONENT_FIELD_DESC.type) {
            TDDIPhysicalComponent PhysicalComponent;
            PhysicalComponent = new TDDIPhysicalComponent();
            PhysicalComponent.read(iprot);
            return PhysicalComponent;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case LOGICAL_COMPONENT:
          if (field.type == LOGICAL_COMPONENT_FIELD_DESC.type) {
            TDDILogicalComponent LogicalComponent;
            LogicalComponent = new TDDILogicalComponent();
            LogicalComponent.read(iprot);
            return LogicalComponent;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case SAFETY_RELATED_SYSTEM:
          if (field.type == SAFETY_RELATED_SYSTEM_FIELD_DESC.type) {
            TDDISafetyRelatedSystem SafetyRelatedSystem;
            SafetyRelatedSystem = new TDDISafetyRelatedSystem();
            SafetyRelatedSystem.read(iprot);
            return SafetyRelatedSystem;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      return null;
    }
  }

  @Override
  protected void standardSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case SYSTEM:
        TDDISystem System = (TDDISystem)value_;
        System.write(oprot);
        return;
      case PHYSICAL_COMPONENT:
        TDDIPhysicalComponent PhysicalComponent = (TDDIPhysicalComponent)value_;
        PhysicalComponent.write(oprot);
        return;
      case LOGICAL_COMPONENT:
        TDDILogicalComponent LogicalComponent = (TDDILogicalComponent)value_;
        LogicalComponent.write(oprot);
        return;
      case SAFETY_RELATED_SYSTEM:
        TDDISafetyRelatedSystem SafetyRelatedSystem = (TDDISafetyRelatedSystem)value_;
        SafetyRelatedSystem.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected java.lang.Object tupleSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, short fieldID) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(fieldID);
    if (setField != null) {
      switch (setField) {
        case SYSTEM:
          TDDISystem System;
          System = new TDDISystem();
          System.read(iprot);
          return System;
        case PHYSICAL_COMPONENT:
          TDDIPhysicalComponent PhysicalComponent;
          PhysicalComponent = new TDDIPhysicalComponent();
          PhysicalComponent.read(iprot);
          return PhysicalComponent;
        case LOGICAL_COMPONENT:
          TDDILogicalComponent LogicalComponent;
          LogicalComponent = new TDDILogicalComponent();
          LogicalComponent.read(iprot);
          return LogicalComponent;
        case SAFETY_RELATED_SYSTEM:
          TDDISafetyRelatedSystem SafetyRelatedSystem;
          SafetyRelatedSystem = new TDDISafetyRelatedSystem();
          SafetyRelatedSystem.read(iprot);
          return SafetyRelatedSystem;
        default:
          throw new java.lang.IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      throw new org.apache.thrift.protocol.TProtocolException("Couldn't find a field with field id " + fieldID);
    }
  }

  @Override
  protected void tupleSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case SYSTEM:
        TDDISystem System = (TDDISystem)value_;
        System.write(oprot);
        return;
      case PHYSICAL_COMPONENT:
        TDDIPhysicalComponent PhysicalComponent = (TDDIPhysicalComponent)value_;
        PhysicalComponent.write(oprot);
        return;
      case LOGICAL_COMPONENT:
        TDDILogicalComponent LogicalComponent = (TDDILogicalComponent)value_;
        LogicalComponent.write(oprot);
        return;
      case SAFETY_RELATED_SYSTEM:
        TDDISafetyRelatedSystem SafetyRelatedSystem = (TDDISafetyRelatedSystem)value_;
        SafetyRelatedSystem.write(oprot);
        return;
      default:
        throw new java.lang.IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TField getFieldDesc(_Fields setField) {
    switch (setField) {
      case SYSTEM:
        return SYSTEM_FIELD_DESC;
      case PHYSICAL_COMPONENT:
        return PHYSICAL_COMPONENT_FIELD_DESC;
      case LOGICAL_COMPONENT:
        return LOGICAL_COMPONENT_FIELD_DESC;
      case SAFETY_RELATED_SYSTEM:
        return SAFETY_RELATED_SYSTEM_FIELD_DESC;
      default:
        throw new java.lang.IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TStruct getStructDesc() {
    return STRUCT_DESC;
  }

  @Override
  protected _Fields enumForId(short id) {
    return _Fields.findByThriftIdOrThrow(id);
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public TDDISystem getSystem() {
    if (getSetField() == _Fields.SYSTEM) {
      return (TDDISystem)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'System' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setSystem(TDDISystem value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.SYSTEM;
    value_ = value;
  }

  public TDDIPhysicalComponent getPhysicalComponent() {
    if (getSetField() == _Fields.PHYSICAL_COMPONENT) {
      return (TDDIPhysicalComponent)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'PhysicalComponent' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setPhysicalComponent(TDDIPhysicalComponent value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.PHYSICAL_COMPONENT;
    value_ = value;
  }

  public TDDILogicalComponent getLogicalComponent() {
    if (getSetField() == _Fields.LOGICAL_COMPONENT) {
      return (TDDILogicalComponent)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'LogicalComponent' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setLogicalComponent(TDDILogicalComponent value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.LOGICAL_COMPONENT;
    value_ = value;
  }

  public TDDISafetyRelatedSystem getSafetyRelatedSystem() {
    if (getSetField() == _Fields.SAFETY_RELATED_SYSTEM) {
      return (TDDISafetyRelatedSystem)getFieldValue();
    } else {
      throw new java.lang.RuntimeException("Cannot get field 'SafetyRelatedSystem' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setSafetyRelatedSystem(TDDISafetyRelatedSystem value) {
    if (value == null) throw new java.lang.NullPointerException();
    setField_ = _Fields.SAFETY_RELATED_SYSTEM;
    value_ = value;
  }

  public boolean isSetSystem() {
    return setField_ == _Fields.SYSTEM;
  }


  public boolean isSetPhysicalComponent() {
    return setField_ == _Fields.PHYSICAL_COMPONENT;
  }


  public boolean isSetLogicalComponent() {
    return setField_ == _Fields.LOGICAL_COMPONENT;
  }


  public boolean isSetSafetyRelatedSystem() {
    return setField_ == _Fields.SAFETY_RELATED_SYSTEM;
  }


  public boolean equals(java.lang.Object other) {
    if (other instanceof TDDISystemUnion) {
      return equals((TDDISystemUnion)other);
    } else {
      return false;
    }
  }

  public boolean equals(TDDISystemUnion other) {
    return other != null && getSetField() == other.getSetField() && getFieldValue().equals(other.getFieldValue());
  }

  @Override
  public int compareTo(TDDISystemUnion other) {
    int lastComparison = org.apache.thrift.TBaseHelper.compareTo(getSetField(), other.getSetField());
    if (lastComparison == 0) {
      return org.apache.thrift.TBaseHelper.compareTo(getFieldValue(), other.getFieldValue());
    }
    return lastComparison;
  }


  @Override
  public int hashCode() {
    java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>();
    list.add(this.getClass().getName());
    org.apache.thrift.TFieldIdEnum setField = getSetField();
    if (setField != null) {
      list.add(setField.getThriftFieldId());
      java.lang.Object value = getFieldValue();
      if (value instanceof org.apache.thrift.TEnum) {
        list.add(((org.apache.thrift.TEnum)getFieldValue()).getValue());
      } else {
        list.add(value);
      }
    }
    return list.hashCode();
  }
  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


}
