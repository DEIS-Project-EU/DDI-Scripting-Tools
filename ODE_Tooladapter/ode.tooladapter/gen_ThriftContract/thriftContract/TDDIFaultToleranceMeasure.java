/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-11-04")
public class TDDIFaultToleranceMeasure implements org.apache.thrift.TBase<TDDIFaultToleranceMeasure, TDDIFaultToleranceMeasure._Fields>, java.io.Serializable, Cloneable, Comparable<TDDIFaultToleranceMeasure> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDIFaultToleranceMeasure");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("Id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("Name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("Description", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField KEY_VALUE_MAPS_FIELD_DESC = new org.apache.thrift.protocol.TField("KeyValueMaps", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField INTRINSIC_SAFETY_FIELD_DESC = new org.apache.thrift.protocol.TField("IntrinsicSafety", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SAFE_GUARD_FIELD_DESC = new org.apache.thrift.protocol.TField("SafeGuard", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField APPLIER_INFORMATION_FIELD_DESC = new org.apache.thrift.protocol.TField("ApplierInformation", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField RISK_ACCEPTABILITY_FIELD_DESC = new org.apache.thrift.protocol.TField("RiskAcceptability", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField FURTHER_ACTION_FIELD_DESC = new org.apache.thrift.protocol.TField("FurtherAction", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("Source", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ASSURANCE_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("AssuranceLevel", org.apache.thrift.protocol.TType.STRUCT, (short)14);
  private static final org.apache.thrift.protocol.TField MEASURE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("MeasureType", org.apache.thrift.protocol.TType.STRUCT, (short)15);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TDDIFaultToleranceMeasureStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TDDIFaultToleranceMeasureTupleSchemeFactory();

  public long Id; // required
  public java.lang.String Name; // required
  public java.lang.String Description; // required
  public java.util.List<TDDIKeyValueMap> KeyValueMaps; // required
  public java.lang.String IntrinsicSafety; // required
  public java.lang.String SafeGuard; // required
  public java.lang.String ApplierInformation; // required
  public boolean RiskAcceptability; // required
  public java.lang.String FurtherAction; // required
  public java.lang.String Source; // required
  public TDDIAssuranceLevel AssuranceLevel; // required
  public TDDIMeasureType MeasureType; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "Id"),
    NAME((short)2, "Name"),
    DESCRIPTION((short)3, "Description"),
    KEY_VALUE_MAPS((short)4, "KeyValueMaps"),
    INTRINSIC_SAFETY((short)5, "IntrinsicSafety"),
    SAFE_GUARD((short)6, "SafeGuard"),
    APPLIER_INFORMATION((short)7, "ApplierInformation"),
    RISK_ACCEPTABILITY((short)8, "RiskAcceptability"),
    FURTHER_ACTION((short)9, "FurtherAction"),
    SOURCE((short)10, "Source"),
    ASSURANCE_LEVEL((short)14, "AssuranceLevel"),
    MEASURE_TYPE((short)15, "MeasureType");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // DESCRIPTION
          return DESCRIPTION;
        case 4: // KEY_VALUE_MAPS
          return KEY_VALUE_MAPS;
        case 5: // INTRINSIC_SAFETY
          return INTRINSIC_SAFETY;
        case 6: // SAFE_GUARD
          return SAFE_GUARD;
        case 7: // APPLIER_INFORMATION
          return APPLIER_INFORMATION;
        case 8: // RISK_ACCEPTABILITY
          return RISK_ACCEPTABILITY;
        case 9: // FURTHER_ACTION
          return FURTHER_ACTION;
        case 10: // SOURCE
          return SOURCE;
        case 14: // ASSURANCE_LEVEL
          return ASSURANCE_LEVEL;
        case 15: // MEASURE_TYPE
          return MEASURE_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __RISKACCEPTABILITY_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("Id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("Description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEY_VALUE_MAPS, new org.apache.thrift.meta_data.FieldMetaData("KeyValueMaps", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIKeyValueMap.class))));
    tmpMap.put(_Fields.INTRINSIC_SAFETY, new org.apache.thrift.meta_data.FieldMetaData("IntrinsicSafety", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SAFE_GUARD, new org.apache.thrift.meta_data.FieldMetaData("SafeGuard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPLIER_INFORMATION, new org.apache.thrift.meta_data.FieldMetaData("ApplierInformation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RISK_ACCEPTABILITY, new org.apache.thrift.meta_data.FieldMetaData("RiskAcceptability", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.FURTHER_ACTION, new org.apache.thrift.meta_data.FieldMetaData("FurtherAction", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("Source", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ASSURANCE_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("AssuranceLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT        , "TDDIAssuranceLevel")));
    tmpMap.put(_Fields.MEASURE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("MeasureType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIMeasureType.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDIFaultToleranceMeasure.class, metaDataMap);
  }

  public TDDIFaultToleranceMeasure() {
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

    this.IntrinsicSafety = "";

    this.SafeGuard = "";

    this.ApplierInformation = "";

    this.RiskAcceptability = false;

    this.FurtherAction = "";

    this.Source = "";

  }

  public TDDIFaultToleranceMeasure(
    long Id,
    java.lang.String Name,
    java.lang.String Description,
    java.util.List<TDDIKeyValueMap> KeyValueMaps,
    java.lang.String IntrinsicSafety,
    java.lang.String SafeGuard,
    java.lang.String ApplierInformation,
    boolean RiskAcceptability,
    java.lang.String FurtherAction,
    java.lang.String Source,
    TDDIAssuranceLevel AssuranceLevel,
    TDDIMeasureType MeasureType)
  {
    this();
    this.Id = Id;
    setIdIsSet(true);
    this.Name = Name;
    this.Description = Description;
    this.KeyValueMaps = KeyValueMaps;
    this.IntrinsicSafety = IntrinsicSafety;
    this.SafeGuard = SafeGuard;
    this.ApplierInformation = ApplierInformation;
    this.RiskAcceptability = RiskAcceptability;
    setRiskAcceptabilityIsSet(true);
    this.FurtherAction = FurtherAction;
    this.Source = Source;
    this.AssuranceLevel = AssuranceLevel;
    this.MeasureType = MeasureType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDDIFaultToleranceMeasure(TDDIFaultToleranceMeasure other) {
    __isset_bitfield = other.__isset_bitfield;
    this.Id = other.Id;
    if (other.isSetName()) {
      this.Name = other.Name;
    }
    if (other.isSetDescription()) {
      this.Description = other.Description;
    }
    if (other.isSetKeyValueMaps()) {
      java.util.List<TDDIKeyValueMap> __this__KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(other.KeyValueMaps.size());
      for (TDDIKeyValueMap other_element : other.KeyValueMaps) {
        __this__KeyValueMaps.add(new TDDIKeyValueMap(other_element));
      }
      this.KeyValueMaps = __this__KeyValueMaps;
    }
    if (other.isSetIntrinsicSafety()) {
      this.IntrinsicSafety = other.IntrinsicSafety;
    }
    if (other.isSetSafeGuard()) {
      this.SafeGuard = other.SafeGuard;
    }
    if (other.isSetApplierInformation()) {
      this.ApplierInformation = other.ApplierInformation;
    }
    this.RiskAcceptability = other.RiskAcceptability;
    if (other.isSetFurtherAction()) {
      this.FurtherAction = other.FurtherAction;
    }
    if (other.isSetSource()) {
      this.Source = other.Source;
    }
    if (other.isSetAssuranceLevel()) {
      this.AssuranceLevel = new TDDIAssuranceLevel(other.AssuranceLevel);
    }
    if (other.isSetMeasureType()) {
      this.MeasureType = new TDDIMeasureType(other.MeasureType);
    }
  }

  public TDDIFaultToleranceMeasure deepCopy() {
    return new TDDIFaultToleranceMeasure(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.Id = 0;
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

    this.IntrinsicSafety = "";

    this.SafeGuard = "";

    this.ApplierInformation = "";

    this.RiskAcceptability = false;

    this.FurtherAction = "";

    this.Source = "";

    this.AssuranceLevel = null;
    this.MeasureType = null;
  }

  public long getId() {
    return this.Id;
  }

  public TDDIFaultToleranceMeasure setId(long Id) {
    this.Id = Id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field Id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.Name;
  }

  public TDDIFaultToleranceMeasure setName(java.lang.String Name) {
    this.Name = Name;
    return this;
  }

  public void unsetName() {
    this.Name = null;
  }

  /** Returns true if field Name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.Name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.Name = null;
    }
  }

  public java.lang.String getDescription() {
    return this.Description;
  }

  public TDDIFaultToleranceMeasure setDescription(java.lang.String Description) {
    this.Description = Description;
    return this;
  }

  public void unsetDescription() {
    this.Description = null;
  }

  /** Returns true if field Description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.Description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.Description = null;
    }
  }

  public int getKeyValueMapsSize() {
    return (this.KeyValueMaps == null) ? 0 : this.KeyValueMaps.size();
  }

  public java.util.Iterator<TDDIKeyValueMap> getKeyValueMapsIterator() {
    return (this.KeyValueMaps == null) ? null : this.KeyValueMaps.iterator();
  }

  public void addToKeyValueMaps(TDDIKeyValueMap elem) {
    if (this.KeyValueMaps == null) {
      this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();
    }
    this.KeyValueMaps.add(elem);
  }

  public java.util.List<TDDIKeyValueMap> getKeyValueMaps() {
    return this.KeyValueMaps;
  }

  public TDDIFaultToleranceMeasure setKeyValueMaps(java.util.List<TDDIKeyValueMap> KeyValueMaps) {
    this.KeyValueMaps = KeyValueMaps;
    return this;
  }

  public void unsetKeyValueMaps() {
    this.KeyValueMaps = null;
  }

  /** Returns true if field KeyValueMaps is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyValueMaps() {
    return this.KeyValueMaps != null;
  }

  public void setKeyValueMapsIsSet(boolean value) {
    if (!value) {
      this.KeyValueMaps = null;
    }
  }

  public java.lang.String getIntrinsicSafety() {
    return this.IntrinsicSafety;
  }

  public TDDIFaultToleranceMeasure setIntrinsicSafety(java.lang.String IntrinsicSafety) {
    this.IntrinsicSafety = IntrinsicSafety;
    return this;
  }

  public void unsetIntrinsicSafety() {
    this.IntrinsicSafety = null;
  }

  /** Returns true if field IntrinsicSafety is set (has been assigned a value) and false otherwise */
  public boolean isSetIntrinsicSafety() {
    return this.IntrinsicSafety != null;
  }

  public void setIntrinsicSafetyIsSet(boolean value) {
    if (!value) {
      this.IntrinsicSafety = null;
    }
  }

  public java.lang.String getSafeGuard() {
    return this.SafeGuard;
  }

  public TDDIFaultToleranceMeasure setSafeGuard(java.lang.String SafeGuard) {
    this.SafeGuard = SafeGuard;
    return this;
  }

  public void unsetSafeGuard() {
    this.SafeGuard = null;
  }

  /** Returns true if field SafeGuard is set (has been assigned a value) and false otherwise */
  public boolean isSetSafeGuard() {
    return this.SafeGuard != null;
  }

  public void setSafeGuardIsSet(boolean value) {
    if (!value) {
      this.SafeGuard = null;
    }
  }

  public java.lang.String getApplierInformation() {
    return this.ApplierInformation;
  }

  public TDDIFaultToleranceMeasure setApplierInformation(java.lang.String ApplierInformation) {
    this.ApplierInformation = ApplierInformation;
    return this;
  }

  public void unsetApplierInformation() {
    this.ApplierInformation = null;
  }

  /** Returns true if field ApplierInformation is set (has been assigned a value) and false otherwise */
  public boolean isSetApplierInformation() {
    return this.ApplierInformation != null;
  }

  public void setApplierInformationIsSet(boolean value) {
    if (!value) {
      this.ApplierInformation = null;
    }
  }

  public boolean isRiskAcceptability() {
    return this.RiskAcceptability;
  }

  public TDDIFaultToleranceMeasure setRiskAcceptability(boolean RiskAcceptability) {
    this.RiskAcceptability = RiskAcceptability;
    setRiskAcceptabilityIsSet(true);
    return this;
  }

  public void unsetRiskAcceptability() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RISKACCEPTABILITY_ISSET_ID);
  }

  /** Returns true if field RiskAcceptability is set (has been assigned a value) and false otherwise */
  public boolean isSetRiskAcceptability() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RISKACCEPTABILITY_ISSET_ID);
  }

  public void setRiskAcceptabilityIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RISKACCEPTABILITY_ISSET_ID, value);
  }

  public java.lang.String getFurtherAction() {
    return this.FurtherAction;
  }

  public TDDIFaultToleranceMeasure setFurtherAction(java.lang.String FurtherAction) {
    this.FurtherAction = FurtherAction;
    return this;
  }

  public void unsetFurtherAction() {
    this.FurtherAction = null;
  }

  /** Returns true if field FurtherAction is set (has been assigned a value) and false otherwise */
  public boolean isSetFurtherAction() {
    return this.FurtherAction != null;
  }

  public void setFurtherActionIsSet(boolean value) {
    if (!value) {
      this.FurtherAction = null;
    }
  }

  public java.lang.String getSource() {
    return this.Source;
  }

  public TDDIFaultToleranceMeasure setSource(java.lang.String Source) {
    this.Source = Source;
    return this;
  }

  public void unsetSource() {
    this.Source = null;
  }

  /** Returns true if field Source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return this.Source != null;
  }

  public void setSourceIsSet(boolean value) {
    if (!value) {
      this.Source = null;
    }
  }

  public TDDIAssuranceLevel getAssuranceLevel() {
    return this.AssuranceLevel;
  }

  public TDDIFaultToleranceMeasure setAssuranceLevel(TDDIAssuranceLevel AssuranceLevel) {
    this.AssuranceLevel = AssuranceLevel;
    return this;
  }

  public void unsetAssuranceLevel() {
    this.AssuranceLevel = null;
  }

  /** Returns true if field AssuranceLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetAssuranceLevel() {
    return this.AssuranceLevel != null;
  }

  public void setAssuranceLevelIsSet(boolean value) {
    if (!value) {
      this.AssuranceLevel = null;
    }
  }

  public TDDIMeasureType getMeasureType() {
    return this.MeasureType;
  }

  public TDDIFaultToleranceMeasure setMeasureType(TDDIMeasureType MeasureType) {
    this.MeasureType = MeasureType;
    return this;
  }

  public void unsetMeasureType() {
    this.MeasureType = null;
  }

  /** Returns true if field MeasureType is set (has been assigned a value) and false otherwise */
  public boolean isSetMeasureType() {
    return this.MeasureType != null;
  }

  public void setMeasureTypeIsSet(boolean value) {
    if (!value) {
      this.MeasureType = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case KEY_VALUE_MAPS:
      if (value == null) {
        unsetKeyValueMaps();
      } else {
        setKeyValueMaps((java.util.List<TDDIKeyValueMap>)value);
      }
      break;

    case INTRINSIC_SAFETY:
      if (value == null) {
        unsetIntrinsicSafety();
      } else {
        setIntrinsicSafety((java.lang.String)value);
      }
      break;

    case SAFE_GUARD:
      if (value == null) {
        unsetSafeGuard();
      } else {
        setSafeGuard((java.lang.String)value);
      }
      break;

    case APPLIER_INFORMATION:
      if (value == null) {
        unsetApplierInformation();
      } else {
        setApplierInformation((java.lang.String)value);
      }
      break;

    case RISK_ACCEPTABILITY:
      if (value == null) {
        unsetRiskAcceptability();
      } else {
        setRiskAcceptability((java.lang.Boolean)value);
      }
      break;

    case FURTHER_ACTION:
      if (value == null) {
        unsetFurtherAction();
      } else {
        setFurtherAction((java.lang.String)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((java.lang.String)value);
      }
      break;

    case ASSURANCE_LEVEL:
      if (value == null) {
        unsetAssuranceLevel();
      } else {
        setAssuranceLevel((TDDIAssuranceLevel)value);
      }
      break;

    case MEASURE_TYPE:
      if (value == null) {
        unsetMeasureType();
      } else {
        setMeasureType((TDDIMeasureType)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case KEY_VALUE_MAPS:
      return getKeyValueMaps();

    case INTRINSIC_SAFETY:
      return getIntrinsicSafety();

    case SAFE_GUARD:
      return getSafeGuard();

    case APPLIER_INFORMATION:
      return getApplierInformation();

    case RISK_ACCEPTABILITY:
      return isRiskAcceptability();

    case FURTHER_ACTION:
      return getFurtherAction();

    case SOURCE:
      return getSource();

    case ASSURANCE_LEVEL:
      return getAssuranceLevel();

    case MEASURE_TYPE:
      return getMeasureType();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case KEY_VALUE_MAPS:
      return isSetKeyValueMaps();
    case INTRINSIC_SAFETY:
      return isSetIntrinsicSafety();
    case SAFE_GUARD:
      return isSetSafeGuard();
    case APPLIER_INFORMATION:
      return isSetApplierInformation();
    case RISK_ACCEPTABILITY:
      return isSetRiskAcceptability();
    case FURTHER_ACTION:
      return isSetFurtherAction();
    case SOURCE:
      return isSetSource();
    case ASSURANCE_LEVEL:
      return isSetAssuranceLevel();
    case MEASURE_TYPE:
      return isSetMeasureType();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TDDIFaultToleranceMeasure)
      return this.equals((TDDIFaultToleranceMeasure)that);
    return false;
  }

  public boolean equals(TDDIFaultToleranceMeasure that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_Id = true;
    boolean that_present_Id = true;
    if (this_present_Id || that_present_Id) {
      if (!(this_present_Id && that_present_Id))
        return false;
      if (this.Id != that.Id)
        return false;
    }

    boolean this_present_Name = true && this.isSetName();
    boolean that_present_Name = true && that.isSetName();
    if (this_present_Name || that_present_Name) {
      if (!(this_present_Name && that_present_Name))
        return false;
      if (!this.Name.equals(that.Name))
        return false;
    }

    boolean this_present_Description = true && this.isSetDescription();
    boolean that_present_Description = true && that.isSetDescription();
    if (this_present_Description || that_present_Description) {
      if (!(this_present_Description && that_present_Description))
        return false;
      if (!this.Description.equals(that.Description))
        return false;
    }

    boolean this_present_KeyValueMaps = true && this.isSetKeyValueMaps();
    boolean that_present_KeyValueMaps = true && that.isSetKeyValueMaps();
    if (this_present_KeyValueMaps || that_present_KeyValueMaps) {
      if (!(this_present_KeyValueMaps && that_present_KeyValueMaps))
        return false;
      if (!this.KeyValueMaps.equals(that.KeyValueMaps))
        return false;
    }

    boolean this_present_IntrinsicSafety = true && this.isSetIntrinsicSafety();
    boolean that_present_IntrinsicSafety = true && that.isSetIntrinsicSafety();
    if (this_present_IntrinsicSafety || that_present_IntrinsicSafety) {
      if (!(this_present_IntrinsicSafety && that_present_IntrinsicSafety))
        return false;
      if (!this.IntrinsicSafety.equals(that.IntrinsicSafety))
        return false;
    }

    boolean this_present_SafeGuard = true && this.isSetSafeGuard();
    boolean that_present_SafeGuard = true && that.isSetSafeGuard();
    if (this_present_SafeGuard || that_present_SafeGuard) {
      if (!(this_present_SafeGuard && that_present_SafeGuard))
        return false;
      if (!this.SafeGuard.equals(that.SafeGuard))
        return false;
    }

    boolean this_present_ApplierInformation = true && this.isSetApplierInformation();
    boolean that_present_ApplierInformation = true && that.isSetApplierInformation();
    if (this_present_ApplierInformation || that_present_ApplierInformation) {
      if (!(this_present_ApplierInformation && that_present_ApplierInformation))
        return false;
      if (!this.ApplierInformation.equals(that.ApplierInformation))
        return false;
    }

    boolean this_present_RiskAcceptability = true;
    boolean that_present_RiskAcceptability = true;
    if (this_present_RiskAcceptability || that_present_RiskAcceptability) {
      if (!(this_present_RiskAcceptability && that_present_RiskAcceptability))
        return false;
      if (this.RiskAcceptability != that.RiskAcceptability)
        return false;
    }

    boolean this_present_FurtherAction = true && this.isSetFurtherAction();
    boolean that_present_FurtherAction = true && that.isSetFurtherAction();
    if (this_present_FurtherAction || that_present_FurtherAction) {
      if (!(this_present_FurtherAction && that_present_FurtherAction))
        return false;
      if (!this.FurtherAction.equals(that.FurtherAction))
        return false;
    }

    boolean this_present_Source = true && this.isSetSource();
    boolean that_present_Source = true && that.isSetSource();
    if (this_present_Source || that_present_Source) {
      if (!(this_present_Source && that_present_Source))
        return false;
      if (!this.Source.equals(that.Source))
        return false;
    }

    boolean this_present_AssuranceLevel = true && this.isSetAssuranceLevel();
    boolean that_present_AssuranceLevel = true && that.isSetAssuranceLevel();
    if (this_present_AssuranceLevel || that_present_AssuranceLevel) {
      if (!(this_present_AssuranceLevel && that_present_AssuranceLevel))
        return false;
      if (!this.AssuranceLevel.equals(that.AssuranceLevel))
        return false;
    }

    boolean this_present_MeasureType = true && this.isSetMeasureType();
    boolean that_present_MeasureType = true && that.isSetMeasureType();
    if (this_present_MeasureType || that_present_MeasureType) {
      if (!(this_present_MeasureType && that_present_MeasureType))
        return false;
      if (!this.MeasureType.equals(that.MeasureType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(Id);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + Name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + Description.hashCode();

    hashCode = hashCode * 8191 + ((isSetKeyValueMaps()) ? 131071 : 524287);
    if (isSetKeyValueMaps())
      hashCode = hashCode * 8191 + KeyValueMaps.hashCode();

    hashCode = hashCode * 8191 + ((isSetIntrinsicSafety()) ? 131071 : 524287);
    if (isSetIntrinsicSafety())
      hashCode = hashCode * 8191 + IntrinsicSafety.hashCode();

    hashCode = hashCode * 8191 + ((isSetSafeGuard()) ? 131071 : 524287);
    if (isSetSafeGuard())
      hashCode = hashCode * 8191 + SafeGuard.hashCode();

    hashCode = hashCode * 8191 + ((isSetApplierInformation()) ? 131071 : 524287);
    if (isSetApplierInformation())
      hashCode = hashCode * 8191 + ApplierInformation.hashCode();

    hashCode = hashCode * 8191 + ((RiskAcceptability) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetFurtherAction()) ? 131071 : 524287);
    if (isSetFurtherAction())
      hashCode = hashCode * 8191 + FurtherAction.hashCode();

    hashCode = hashCode * 8191 + ((isSetSource()) ? 131071 : 524287);
    if (isSetSource())
      hashCode = hashCode * 8191 + Source.hashCode();

    hashCode = hashCode * 8191 + ((isSetAssuranceLevel()) ? 131071 : 524287);
    if (isSetAssuranceLevel())
      hashCode = hashCode * 8191 + AssuranceLevel.hashCode();

    hashCode = hashCode * 8191 + ((isSetMeasureType()) ? 131071 : 524287);
    if (isSetMeasureType())
      hashCode = hashCode * 8191 + MeasureType.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TDDIFaultToleranceMeasure other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Id, other.Id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Name, other.Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Description, other.Description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyValueMaps()).compareTo(other.isSetKeyValueMaps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyValueMaps()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.KeyValueMaps, other.KeyValueMaps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIntrinsicSafety()).compareTo(other.isSetIntrinsicSafety());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntrinsicSafety()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.IntrinsicSafety, other.IntrinsicSafety);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSafeGuard()).compareTo(other.isSetSafeGuard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSafeGuard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SafeGuard, other.SafeGuard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplierInformation()).compareTo(other.isSetApplierInformation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplierInformation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ApplierInformation, other.ApplierInformation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRiskAcceptability()).compareTo(other.isSetRiskAcceptability());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRiskAcceptability()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.RiskAcceptability, other.RiskAcceptability);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFurtherAction()).compareTo(other.isSetFurtherAction());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFurtherAction()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.FurtherAction, other.FurtherAction);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Source, other.Source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAssuranceLevel()).compareTo(other.isSetAssuranceLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAssuranceLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.AssuranceLevel, other.AssuranceLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMeasureType()).compareTo(other.isSetMeasureType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMeasureType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.MeasureType, other.MeasureType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TDDIFaultToleranceMeasure(");
    boolean first = true;

    sb.append("Id:");
    sb.append(this.Id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("Name:");
    if (this.Name == null) {
      sb.append("null");
    } else {
      sb.append(this.Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Description:");
    if (this.Description == null) {
      sb.append("null");
    } else {
      sb.append(this.Description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("KeyValueMaps:");
    if (this.KeyValueMaps == null) {
      sb.append("null");
    } else {
      sb.append(this.KeyValueMaps);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("IntrinsicSafety:");
    if (this.IntrinsicSafety == null) {
      sb.append("null");
    } else {
      sb.append(this.IntrinsicSafety);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("SafeGuard:");
    if (this.SafeGuard == null) {
      sb.append("null");
    } else {
      sb.append(this.SafeGuard);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ApplierInformation:");
    if (this.ApplierInformation == null) {
      sb.append("null");
    } else {
      sb.append(this.ApplierInformation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("RiskAcceptability:");
    sb.append(this.RiskAcceptability);
    first = false;
    if (!first) sb.append(", ");
    sb.append("FurtherAction:");
    if (this.FurtherAction == null) {
      sb.append("null");
    } else {
      sb.append(this.FurtherAction);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Source:");
    if (this.Source == null) {
      sb.append("null");
    } else {
      sb.append(this.Source);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("AssuranceLevel:");
    if (this.AssuranceLevel == null) {
      sb.append("null");
    } else {
      sb.append(this.AssuranceLevel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("MeasureType:");
    if (this.MeasureType == null) {
      sb.append("null");
    } else {
      sb.append(this.MeasureType);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (MeasureType != null) {
      MeasureType.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDDIFaultToleranceMeasureStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIFaultToleranceMeasureStandardScheme getScheme() {
      return new TDDIFaultToleranceMeasureStandardScheme();
    }
  }

  private static class TDDIFaultToleranceMeasureStandardScheme extends org.apache.thrift.scheme.StandardScheme<TDDIFaultToleranceMeasure> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDDIFaultToleranceMeasure struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.Id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // KEY_VALUE_MAPS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list24 = iprot.readListBegin();
                struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list24.size);
                TDDIKeyValueMap _elem25;
                for (int _i26 = 0; _i26 < _list24.size; ++_i26)
                {
                  _elem25 = new TDDIKeyValueMap();
                  _elem25.read(iprot);
                  struct.KeyValueMaps.add(_elem25);
                }
                iprot.readListEnd();
              }
              struct.setKeyValueMapsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INTRINSIC_SAFETY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.IntrinsicSafety = iprot.readString();
              struct.setIntrinsicSafetyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SAFE_GUARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.SafeGuard = iprot.readString();
              struct.setSafeGuardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // APPLIER_INFORMATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ApplierInformation = iprot.readString();
              struct.setApplierInformationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RISK_ACCEPTABILITY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.RiskAcceptability = iprot.readBool();
              struct.setRiskAcceptabilityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // FURTHER_ACTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.FurtherAction = iprot.readString();
              struct.setFurtherActionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Source = iprot.readString();
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ASSURANCE_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.AssuranceLevel = new TDDIAssuranceLevel();
              struct.AssuranceLevel.read(iprot);
              struct.setAssuranceLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // MEASURE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.MeasureType = new TDDIMeasureType();
              struct.MeasureType.read(iprot);
              struct.setMeasureTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDDIFaultToleranceMeasure struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.Id);
      oprot.writeFieldEnd();
      if (struct.Name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.Name);
        oprot.writeFieldEnd();
      }
      if (struct.Description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.Description);
        oprot.writeFieldEnd();
      }
      if (struct.KeyValueMaps != null) {
        oprot.writeFieldBegin(KEY_VALUE_MAPS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.KeyValueMaps.size()));
          for (TDDIKeyValueMap _iter27 : struct.KeyValueMaps)
          {
            _iter27.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.IntrinsicSafety != null) {
        oprot.writeFieldBegin(INTRINSIC_SAFETY_FIELD_DESC);
        oprot.writeString(struct.IntrinsicSafety);
        oprot.writeFieldEnd();
      }
      if (struct.SafeGuard != null) {
        oprot.writeFieldBegin(SAFE_GUARD_FIELD_DESC);
        oprot.writeString(struct.SafeGuard);
        oprot.writeFieldEnd();
      }
      if (struct.ApplierInformation != null) {
        oprot.writeFieldBegin(APPLIER_INFORMATION_FIELD_DESC);
        oprot.writeString(struct.ApplierInformation);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RISK_ACCEPTABILITY_FIELD_DESC);
      oprot.writeBool(struct.RiskAcceptability);
      oprot.writeFieldEnd();
      if (struct.FurtherAction != null) {
        oprot.writeFieldBegin(FURTHER_ACTION_FIELD_DESC);
        oprot.writeString(struct.FurtherAction);
        oprot.writeFieldEnd();
      }
      if (struct.Source != null) {
        oprot.writeFieldBegin(SOURCE_FIELD_DESC);
        oprot.writeString(struct.Source);
        oprot.writeFieldEnd();
      }
      if (struct.AssuranceLevel != null) {
        oprot.writeFieldBegin(ASSURANCE_LEVEL_FIELD_DESC);
        struct.AssuranceLevel.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.MeasureType != null) {
        oprot.writeFieldBegin(MEASURE_TYPE_FIELD_DESC);
        struct.MeasureType.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDDIFaultToleranceMeasureTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIFaultToleranceMeasureTupleScheme getScheme() {
      return new TDDIFaultToleranceMeasureTupleScheme();
    }
  }

  private static class TDDIFaultToleranceMeasureTupleScheme extends org.apache.thrift.scheme.TupleScheme<TDDIFaultToleranceMeasure> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDDIFaultToleranceMeasure struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescription()) {
        optionals.set(2);
      }
      if (struct.isSetKeyValueMaps()) {
        optionals.set(3);
      }
      if (struct.isSetIntrinsicSafety()) {
        optionals.set(4);
      }
      if (struct.isSetSafeGuard()) {
        optionals.set(5);
      }
      if (struct.isSetApplierInformation()) {
        optionals.set(6);
      }
      if (struct.isSetRiskAcceptability()) {
        optionals.set(7);
      }
      if (struct.isSetFurtherAction()) {
        optionals.set(8);
      }
      if (struct.isSetSource()) {
        optionals.set(9);
      }
      if (struct.isSetAssuranceLevel()) {
        optionals.set(10);
      }
      if (struct.isSetMeasureType()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetId()) {
        oprot.writeI64(struct.Id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.Name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.Description);
      }
      if (struct.isSetKeyValueMaps()) {
        {
          oprot.writeI32(struct.KeyValueMaps.size());
          for (TDDIKeyValueMap _iter28 : struct.KeyValueMaps)
          {
            _iter28.write(oprot);
          }
        }
      }
      if (struct.isSetIntrinsicSafety()) {
        oprot.writeString(struct.IntrinsicSafety);
      }
      if (struct.isSetSafeGuard()) {
        oprot.writeString(struct.SafeGuard);
      }
      if (struct.isSetApplierInformation()) {
        oprot.writeString(struct.ApplierInformation);
      }
      if (struct.isSetRiskAcceptability()) {
        oprot.writeBool(struct.RiskAcceptability);
      }
      if (struct.isSetFurtherAction()) {
        oprot.writeString(struct.FurtherAction);
      }
      if (struct.isSetSource()) {
        oprot.writeString(struct.Source);
      }
      if (struct.isSetAssuranceLevel()) {
        struct.AssuranceLevel.write(oprot);
      }
      if (struct.isSetMeasureType()) {
        struct.MeasureType.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDDIFaultToleranceMeasure struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.Id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.Name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.Description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list29.size);
          TDDIKeyValueMap _elem30;
          for (int _i31 = 0; _i31 < _list29.size; ++_i31)
          {
            _elem30 = new TDDIKeyValueMap();
            _elem30.read(iprot);
            struct.KeyValueMaps.add(_elem30);
          }
        }
        struct.setKeyValueMapsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.IntrinsicSafety = iprot.readString();
        struct.setIntrinsicSafetyIsSet(true);
      }
      if (incoming.get(5)) {
        struct.SafeGuard = iprot.readString();
        struct.setSafeGuardIsSet(true);
      }
      if (incoming.get(6)) {
        struct.ApplierInformation = iprot.readString();
        struct.setApplierInformationIsSet(true);
      }
      if (incoming.get(7)) {
        struct.RiskAcceptability = iprot.readBool();
        struct.setRiskAcceptabilityIsSet(true);
      }
      if (incoming.get(8)) {
        struct.FurtherAction = iprot.readString();
        struct.setFurtherActionIsSet(true);
      }
      if (incoming.get(9)) {
        struct.Source = iprot.readString();
        struct.setSourceIsSet(true);
      }
      if (incoming.get(10)) {
        struct.AssuranceLevel = new TDDIAssuranceLevel();
        struct.AssuranceLevel.read(iprot);
        struct.setAssuranceLevelIsSet(true);
      }
      if (incoming.get(11)) {
        struct.MeasureType = new TDDIMeasureType();
        struct.MeasureType.read(iprot);
        struct.setMeasureTypeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

