/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thriftContract;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-01-14")
public class TDDIMaintenanceProcedure implements org.apache.thrift.TBase<TDDIMaintenanceProcedure, TDDIMaintenanceProcedure._Fields>, java.io.Serializable, Cloneable, Comparable<TDDIMaintenanceProcedure> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TDDIMaintenanceProcedure");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("Id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("Name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("Description", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField KEY_VALUE_MAPS_FIELD_DESC = new org.apache.thrift.protocol.TField("KeyValueMaps", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField ACTIVITY_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("ActivityDescription", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TECHNICAL_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("TechnicalDescription", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField TOOL_SPECIFICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("ToolSpecification", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField STAFF_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("StaffNumber", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField STAFF_SKILL_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("StaffSkillLevel", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField STAFF_TRAINING_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("StaffTrainingDescription", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TDDIMaintenanceProcedureStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TDDIMaintenanceProcedureTupleSchemeFactory();

  public long Id; // required
  public java.lang.String Name; // required
  public java.lang.String Description; // required
  public java.util.List<TDDIKeyValueMap> KeyValueMaps; // required
  public java.lang.String ActivityDescription; // required
  public java.lang.String TechnicalDescription; // required
  public java.lang.String ToolSpecification; // required
  public int StaffNumber; // required
  public java.lang.String StaffSkillLevel; // required
  public java.lang.String StaffTrainingDescription; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "Id"),
    NAME((short)2, "Name"),
    DESCRIPTION((short)3, "Description"),
    KEY_VALUE_MAPS((short)4, "KeyValueMaps"),
    ACTIVITY_DESCRIPTION((short)5, "ActivityDescription"),
    TECHNICAL_DESCRIPTION((short)6, "TechnicalDescription"),
    TOOL_SPECIFICATION((short)7, "ToolSpecification"),
    STAFF_NUMBER((short)8, "StaffNumber"),
    STAFF_SKILL_LEVEL((short)9, "StaffSkillLevel"),
    STAFF_TRAINING_DESCRIPTION((short)10, "StaffTrainingDescription");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // DESCRIPTION
          return DESCRIPTION;
        case 4: // KEY_VALUE_MAPS
          return KEY_VALUE_MAPS;
        case 5: // ACTIVITY_DESCRIPTION
          return ACTIVITY_DESCRIPTION;
        case 6: // TECHNICAL_DESCRIPTION
          return TECHNICAL_DESCRIPTION;
        case 7: // TOOL_SPECIFICATION
          return TOOL_SPECIFICATION;
        case 8: // STAFF_NUMBER
          return STAFF_NUMBER;
        case 9: // STAFF_SKILL_LEVEL
          return STAFF_SKILL_LEVEL;
        case 10: // STAFF_TRAINING_DESCRIPTION
          return STAFF_TRAINING_DESCRIPTION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __STAFFNUMBER_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("Id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("Name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("Description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.KEY_VALUE_MAPS, new org.apache.thrift.meta_data.FieldMetaData("KeyValueMaps", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDDIKeyValueMap.class))));
    tmpMap.put(_Fields.ACTIVITY_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("ActivityDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TECHNICAL_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("TechnicalDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOOL_SPECIFICATION, new org.apache.thrift.meta_data.FieldMetaData("ToolSpecification", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STAFF_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("StaffNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.STAFF_SKILL_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("StaffSkillLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STAFF_TRAINING_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("StaffTrainingDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TDDIMaintenanceProcedure.class, metaDataMap);
  }

  public TDDIMaintenanceProcedure() {
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

    this.ActivityDescription = "";

    this.TechnicalDescription = "";

    this.ToolSpecification = "";

    this.StaffSkillLevel = "";

    this.StaffTrainingDescription = "";

  }

  public TDDIMaintenanceProcedure(
    long Id,
    java.lang.String Name,
    java.lang.String Description,
    java.util.List<TDDIKeyValueMap> KeyValueMaps,
    java.lang.String ActivityDescription,
    java.lang.String TechnicalDescription,
    java.lang.String ToolSpecification,
    int StaffNumber,
    java.lang.String StaffSkillLevel,
    java.lang.String StaffTrainingDescription)
  {
    this();
    this.Id = Id;
    setIdIsSet(true);
    this.Name = Name;
    this.Description = Description;
    this.KeyValueMaps = KeyValueMaps;
    this.ActivityDescription = ActivityDescription;
    this.TechnicalDescription = TechnicalDescription;
    this.ToolSpecification = ToolSpecification;
    this.StaffNumber = StaffNumber;
    setStaffNumberIsSet(true);
    this.StaffSkillLevel = StaffSkillLevel;
    this.StaffTrainingDescription = StaffTrainingDescription;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TDDIMaintenanceProcedure(TDDIMaintenanceProcedure other) {
    __isset_bitfield = other.__isset_bitfield;
    this.Id = other.Id;
    if (other.isSetName()) {
      this.Name = other.Name;
    }
    if (other.isSetDescription()) {
      this.Description = other.Description;
    }
    if (other.isSetKeyValueMaps()) {
      java.util.List<TDDIKeyValueMap> __this__KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(other.KeyValueMaps.size());
      for (TDDIKeyValueMap other_element : other.KeyValueMaps) {
        __this__KeyValueMaps.add(new TDDIKeyValueMap(other_element));
      }
      this.KeyValueMaps = __this__KeyValueMaps;
    }
    if (other.isSetActivityDescription()) {
      this.ActivityDescription = other.ActivityDescription;
    }
    if (other.isSetTechnicalDescription()) {
      this.TechnicalDescription = other.TechnicalDescription;
    }
    if (other.isSetToolSpecification()) {
      this.ToolSpecification = other.ToolSpecification;
    }
    this.StaffNumber = other.StaffNumber;
    if (other.isSetStaffSkillLevel()) {
      this.StaffSkillLevel = other.StaffSkillLevel;
    }
    if (other.isSetStaffTrainingDescription()) {
      this.StaffTrainingDescription = other.StaffTrainingDescription;
    }
  }

  public TDDIMaintenanceProcedure deepCopy() {
    return new TDDIMaintenanceProcedure(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.Id = 0;
    this.Name = "";

    this.Description = "";

    this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();

    this.ActivityDescription = "";

    this.TechnicalDescription = "";

    this.ToolSpecification = "";

    setStaffNumberIsSet(false);
    this.StaffNumber = 0;
    this.StaffSkillLevel = "";

    this.StaffTrainingDescription = "";

  }

  public long getId() {
    return this.Id;
  }

  public TDDIMaintenanceProcedure setId(long Id) {
    this.Id = Id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field Id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public java.lang.String getName() {
    return this.Name;
  }

  public TDDIMaintenanceProcedure setName(java.lang.String Name) {
    this.Name = Name;
    return this;
  }

  public void unsetName() {
    this.Name = null;
  }

  /** Returns true if field Name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.Name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.Name = null;
    }
  }

  public java.lang.String getDescription() {
    return this.Description;
  }

  public TDDIMaintenanceProcedure setDescription(java.lang.String Description) {
    this.Description = Description;
    return this;
  }

  public void unsetDescription() {
    this.Description = null;
  }

  /** Returns true if field Description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.Description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.Description = null;
    }
  }

  public int getKeyValueMapsSize() {
    return (this.KeyValueMaps == null) ? 0 : this.KeyValueMaps.size();
  }

  public java.util.Iterator<TDDIKeyValueMap> getKeyValueMapsIterator() {
    return (this.KeyValueMaps == null) ? null : this.KeyValueMaps.iterator();
  }

  public void addToKeyValueMaps(TDDIKeyValueMap elem) {
    if (this.KeyValueMaps == null) {
      this.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>();
    }
    this.KeyValueMaps.add(elem);
  }

  public java.util.List<TDDIKeyValueMap> getKeyValueMaps() {
    return this.KeyValueMaps;
  }

  public TDDIMaintenanceProcedure setKeyValueMaps(java.util.List<TDDIKeyValueMap> KeyValueMaps) {
    this.KeyValueMaps = KeyValueMaps;
    return this;
  }

  public void unsetKeyValueMaps() {
    this.KeyValueMaps = null;
  }

  /** Returns true if field KeyValueMaps is set (has been assigned a value) and false otherwise */
  public boolean isSetKeyValueMaps() {
    return this.KeyValueMaps != null;
  }

  public void setKeyValueMapsIsSet(boolean value) {
    if (!value) {
      this.KeyValueMaps = null;
    }
  }

  public java.lang.String getActivityDescription() {
    return this.ActivityDescription;
  }

  public TDDIMaintenanceProcedure setActivityDescription(java.lang.String ActivityDescription) {
    this.ActivityDescription = ActivityDescription;
    return this;
  }

  public void unsetActivityDescription() {
    this.ActivityDescription = null;
  }

  /** Returns true if field ActivityDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetActivityDescription() {
    return this.ActivityDescription != null;
  }

  public void setActivityDescriptionIsSet(boolean value) {
    if (!value) {
      this.ActivityDescription = null;
    }
  }

  public java.lang.String getTechnicalDescription() {
    return this.TechnicalDescription;
  }

  public TDDIMaintenanceProcedure setTechnicalDescription(java.lang.String TechnicalDescription) {
    this.TechnicalDescription = TechnicalDescription;
    return this;
  }

  public void unsetTechnicalDescription() {
    this.TechnicalDescription = null;
  }

  /** Returns true if field TechnicalDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetTechnicalDescription() {
    return this.TechnicalDescription != null;
  }

  public void setTechnicalDescriptionIsSet(boolean value) {
    if (!value) {
      this.TechnicalDescription = null;
    }
  }

  public java.lang.String getToolSpecification() {
    return this.ToolSpecification;
  }

  public TDDIMaintenanceProcedure setToolSpecification(java.lang.String ToolSpecification) {
    this.ToolSpecification = ToolSpecification;
    return this;
  }

  public void unsetToolSpecification() {
    this.ToolSpecification = null;
  }

  /** Returns true if field ToolSpecification is set (has been assigned a value) and false otherwise */
  public boolean isSetToolSpecification() {
    return this.ToolSpecification != null;
  }

  public void setToolSpecificationIsSet(boolean value) {
    if (!value) {
      this.ToolSpecification = null;
    }
  }

  public int getStaffNumber() {
    return this.StaffNumber;
  }

  public TDDIMaintenanceProcedure setStaffNumber(int StaffNumber) {
    this.StaffNumber = StaffNumber;
    setStaffNumberIsSet(true);
    return this;
  }

  public void unsetStaffNumber() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STAFFNUMBER_ISSET_ID);
  }

  /** Returns true if field StaffNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetStaffNumber() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STAFFNUMBER_ISSET_ID);
  }

  public void setStaffNumberIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STAFFNUMBER_ISSET_ID, value);
  }

  public java.lang.String getStaffSkillLevel() {
    return this.StaffSkillLevel;
  }

  public TDDIMaintenanceProcedure setStaffSkillLevel(java.lang.String StaffSkillLevel) {
    this.StaffSkillLevel = StaffSkillLevel;
    return this;
  }

  public void unsetStaffSkillLevel() {
    this.StaffSkillLevel = null;
  }

  /** Returns true if field StaffSkillLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetStaffSkillLevel() {
    return this.StaffSkillLevel != null;
  }

  public void setStaffSkillLevelIsSet(boolean value) {
    if (!value) {
      this.StaffSkillLevel = null;
    }
  }

  public java.lang.String getStaffTrainingDescription() {
    return this.StaffTrainingDescription;
  }

  public TDDIMaintenanceProcedure setStaffTrainingDescription(java.lang.String StaffTrainingDescription) {
    this.StaffTrainingDescription = StaffTrainingDescription;
    return this;
  }

  public void unsetStaffTrainingDescription() {
    this.StaffTrainingDescription = null;
  }

  /** Returns true if field StaffTrainingDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetStaffTrainingDescription() {
    return this.StaffTrainingDescription != null;
  }

  public void setStaffTrainingDescriptionIsSet(boolean value) {
    if (!value) {
      this.StaffTrainingDescription = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((java.lang.String)value);
      }
      break;

    case KEY_VALUE_MAPS:
      if (value == null) {
        unsetKeyValueMaps();
      } else {
        setKeyValueMaps((java.util.List<TDDIKeyValueMap>)value);
      }
      break;

    case ACTIVITY_DESCRIPTION:
      if (value == null) {
        unsetActivityDescription();
      } else {
        setActivityDescription((java.lang.String)value);
      }
      break;

    case TECHNICAL_DESCRIPTION:
      if (value == null) {
        unsetTechnicalDescription();
      } else {
        setTechnicalDescription((java.lang.String)value);
      }
      break;

    case TOOL_SPECIFICATION:
      if (value == null) {
        unsetToolSpecification();
      } else {
        setToolSpecification((java.lang.String)value);
      }
      break;

    case STAFF_NUMBER:
      if (value == null) {
        unsetStaffNumber();
      } else {
        setStaffNumber((java.lang.Integer)value);
      }
      break;

    case STAFF_SKILL_LEVEL:
      if (value == null) {
        unsetStaffSkillLevel();
      } else {
        setStaffSkillLevel((java.lang.String)value);
      }
      break;

    case STAFF_TRAINING_DESCRIPTION:
      if (value == null) {
        unsetStaffTrainingDescription();
      } else {
        setStaffTrainingDescription((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case KEY_VALUE_MAPS:
      return getKeyValueMaps();

    case ACTIVITY_DESCRIPTION:
      return getActivityDescription();

    case TECHNICAL_DESCRIPTION:
      return getTechnicalDescription();

    case TOOL_SPECIFICATION:
      return getToolSpecification();

    case STAFF_NUMBER:
      return getStaffNumber();

    case STAFF_SKILL_LEVEL:
      return getStaffSkillLevel();

    case STAFF_TRAINING_DESCRIPTION:
      return getStaffTrainingDescription();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case KEY_VALUE_MAPS:
      return isSetKeyValueMaps();
    case ACTIVITY_DESCRIPTION:
      return isSetActivityDescription();
    case TECHNICAL_DESCRIPTION:
      return isSetTechnicalDescription();
    case TOOL_SPECIFICATION:
      return isSetToolSpecification();
    case STAFF_NUMBER:
      return isSetStaffNumber();
    case STAFF_SKILL_LEVEL:
      return isSetStaffSkillLevel();
    case STAFF_TRAINING_DESCRIPTION:
      return isSetStaffTrainingDescription();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TDDIMaintenanceProcedure)
      return this.equals((TDDIMaintenanceProcedure)that);
    return false;
  }

  public boolean equals(TDDIMaintenanceProcedure that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_Id = true;
    boolean that_present_Id = true;
    if (this_present_Id || that_present_Id) {
      if (!(this_present_Id && that_present_Id))
        return false;
      if (this.Id != that.Id)
        return false;
    }

    boolean this_present_Name = true && this.isSetName();
    boolean that_present_Name = true && that.isSetName();
    if (this_present_Name || that_present_Name) {
      if (!(this_present_Name && that_present_Name))
        return false;
      if (!this.Name.equals(that.Name))
        return false;
    }

    boolean this_present_Description = true && this.isSetDescription();
    boolean that_present_Description = true && that.isSetDescription();
    if (this_present_Description || that_present_Description) {
      if (!(this_present_Description && that_present_Description))
        return false;
      if (!this.Description.equals(that.Description))
        return false;
    }

    boolean this_present_KeyValueMaps = true && this.isSetKeyValueMaps();
    boolean that_present_KeyValueMaps = true && that.isSetKeyValueMaps();
    if (this_present_KeyValueMaps || that_present_KeyValueMaps) {
      if (!(this_present_KeyValueMaps && that_present_KeyValueMaps))
        return false;
      if (!this.KeyValueMaps.equals(that.KeyValueMaps))
        return false;
    }

    boolean this_present_ActivityDescription = true && this.isSetActivityDescription();
    boolean that_present_ActivityDescription = true && that.isSetActivityDescription();
    if (this_present_ActivityDescription || that_present_ActivityDescription) {
      if (!(this_present_ActivityDescription && that_present_ActivityDescription))
        return false;
      if (!this.ActivityDescription.equals(that.ActivityDescription))
        return false;
    }

    boolean this_present_TechnicalDescription = true && this.isSetTechnicalDescription();
    boolean that_present_TechnicalDescription = true && that.isSetTechnicalDescription();
    if (this_present_TechnicalDescription || that_present_TechnicalDescription) {
      if (!(this_present_TechnicalDescription && that_present_TechnicalDescription))
        return false;
      if (!this.TechnicalDescription.equals(that.TechnicalDescription))
        return false;
    }

    boolean this_present_ToolSpecification = true && this.isSetToolSpecification();
    boolean that_present_ToolSpecification = true && that.isSetToolSpecification();
    if (this_present_ToolSpecification || that_present_ToolSpecification) {
      if (!(this_present_ToolSpecification && that_present_ToolSpecification))
        return false;
      if (!this.ToolSpecification.equals(that.ToolSpecification))
        return false;
    }

    boolean this_present_StaffNumber = true;
    boolean that_present_StaffNumber = true;
    if (this_present_StaffNumber || that_present_StaffNumber) {
      if (!(this_present_StaffNumber && that_present_StaffNumber))
        return false;
      if (this.StaffNumber != that.StaffNumber)
        return false;
    }

    boolean this_present_StaffSkillLevel = true && this.isSetStaffSkillLevel();
    boolean that_present_StaffSkillLevel = true && that.isSetStaffSkillLevel();
    if (this_present_StaffSkillLevel || that_present_StaffSkillLevel) {
      if (!(this_present_StaffSkillLevel && that_present_StaffSkillLevel))
        return false;
      if (!this.StaffSkillLevel.equals(that.StaffSkillLevel))
        return false;
    }

    boolean this_present_StaffTrainingDescription = true && this.isSetStaffTrainingDescription();
    boolean that_present_StaffTrainingDescription = true && that.isSetStaffTrainingDescription();
    if (this_present_StaffTrainingDescription || that_present_StaffTrainingDescription) {
      if (!(this_present_StaffTrainingDescription && that_present_StaffTrainingDescription))
        return false;
      if (!this.StaffTrainingDescription.equals(that.StaffTrainingDescription))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(Id);

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + Name.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
    if (isSetDescription())
      hashCode = hashCode * 8191 + Description.hashCode();

    hashCode = hashCode * 8191 + ((isSetKeyValueMaps()) ? 131071 : 524287);
    if (isSetKeyValueMaps())
      hashCode = hashCode * 8191 + KeyValueMaps.hashCode();

    hashCode = hashCode * 8191 + ((isSetActivityDescription()) ? 131071 : 524287);
    if (isSetActivityDescription())
      hashCode = hashCode * 8191 + ActivityDescription.hashCode();

    hashCode = hashCode * 8191 + ((isSetTechnicalDescription()) ? 131071 : 524287);
    if (isSetTechnicalDescription())
      hashCode = hashCode * 8191 + TechnicalDescription.hashCode();

    hashCode = hashCode * 8191 + ((isSetToolSpecification()) ? 131071 : 524287);
    if (isSetToolSpecification())
      hashCode = hashCode * 8191 + ToolSpecification.hashCode();

    hashCode = hashCode * 8191 + StaffNumber;

    hashCode = hashCode * 8191 + ((isSetStaffSkillLevel()) ? 131071 : 524287);
    if (isSetStaffSkillLevel())
      hashCode = hashCode * 8191 + StaffSkillLevel.hashCode();

    hashCode = hashCode * 8191 + ((isSetStaffTrainingDescription()) ? 131071 : 524287);
    if (isSetStaffTrainingDescription())
      hashCode = hashCode * 8191 + StaffTrainingDescription.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TDDIMaintenanceProcedure other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Id, other.Id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Name, other.Name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Description, other.Description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetKeyValueMaps()).compareTo(other.isSetKeyValueMaps());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetKeyValueMaps()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.KeyValueMaps, other.KeyValueMaps);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetActivityDescription()).compareTo(other.isSetActivityDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActivityDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ActivityDescription, other.ActivityDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTechnicalDescription()).compareTo(other.isSetTechnicalDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTechnicalDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.TechnicalDescription, other.TechnicalDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetToolSpecification()).compareTo(other.isSetToolSpecification());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToolSpecification()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ToolSpecification, other.ToolSpecification);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStaffNumber()).compareTo(other.isSetStaffNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStaffNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.StaffNumber, other.StaffNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStaffSkillLevel()).compareTo(other.isSetStaffSkillLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStaffSkillLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.StaffSkillLevel, other.StaffSkillLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStaffTrainingDescription()).compareTo(other.isSetStaffTrainingDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStaffTrainingDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.StaffTrainingDescription, other.StaffTrainingDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TDDIMaintenanceProcedure(");
    boolean first = true;

    sb.append("Id:");
    sb.append(this.Id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("Name:");
    if (this.Name == null) {
      sb.append("null");
    } else {
      sb.append(this.Name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Description:");
    if (this.Description == null) {
      sb.append("null");
    } else {
      sb.append(this.Description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("KeyValueMaps:");
    if (this.KeyValueMaps == null) {
      sb.append("null");
    } else {
      sb.append(this.KeyValueMaps);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ActivityDescription:");
    if (this.ActivityDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.ActivityDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("TechnicalDescription:");
    if (this.TechnicalDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.TechnicalDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ToolSpecification:");
    if (this.ToolSpecification == null) {
      sb.append("null");
    } else {
      sb.append(this.ToolSpecification);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("StaffNumber:");
    sb.append(this.StaffNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("StaffSkillLevel:");
    if (this.StaffSkillLevel == null) {
      sb.append("null");
    } else {
      sb.append(this.StaffSkillLevel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("StaffTrainingDescription:");
    if (this.StaffTrainingDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.StaffTrainingDescription);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TDDIMaintenanceProcedureStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIMaintenanceProcedureStandardScheme getScheme() {
      return new TDDIMaintenanceProcedureStandardScheme();
    }
  }

  private static class TDDIMaintenanceProcedureStandardScheme extends org.apache.thrift.scheme.StandardScheme<TDDIMaintenanceProcedure> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TDDIMaintenanceProcedure struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.Id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // KEY_VALUE_MAPS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list32 = iprot.readListBegin();
                struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list32.size);
                TDDIKeyValueMap _elem33;
                for (int _i34 = 0; _i34 < _list32.size; ++_i34)
                {
                  _elem33 = new TDDIKeyValueMap();
                  _elem33.read(iprot);
                  struct.KeyValueMaps.add(_elem33);
                }
                iprot.readListEnd();
              }
              struct.setKeyValueMapsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ACTIVITY_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ActivityDescription = iprot.readString();
              struct.setActivityDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TECHNICAL_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.TechnicalDescription = iprot.readString();
              struct.setTechnicalDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TOOL_SPECIFICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ToolSpecification = iprot.readString();
              struct.setToolSpecificationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STAFF_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.StaffNumber = iprot.readI32();
              struct.setStaffNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STAFF_SKILL_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.StaffSkillLevel = iprot.readString();
              struct.setStaffSkillLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STAFF_TRAINING_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.StaffTrainingDescription = iprot.readString();
              struct.setStaffTrainingDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TDDIMaintenanceProcedure struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.Id);
      oprot.writeFieldEnd();
      if (struct.Name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.Name);
        oprot.writeFieldEnd();
      }
      if (struct.Description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.Description);
        oprot.writeFieldEnd();
      }
      if (struct.KeyValueMaps != null) {
        oprot.writeFieldBegin(KEY_VALUE_MAPS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.KeyValueMaps.size()));
          for (TDDIKeyValueMap _iter35 : struct.KeyValueMaps)
          {
            _iter35.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.ActivityDescription != null) {
        oprot.writeFieldBegin(ACTIVITY_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.ActivityDescription);
        oprot.writeFieldEnd();
      }
      if (struct.TechnicalDescription != null) {
        oprot.writeFieldBegin(TECHNICAL_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.TechnicalDescription);
        oprot.writeFieldEnd();
      }
      if (struct.ToolSpecification != null) {
        oprot.writeFieldBegin(TOOL_SPECIFICATION_FIELD_DESC);
        oprot.writeString(struct.ToolSpecification);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STAFF_NUMBER_FIELD_DESC);
      oprot.writeI32(struct.StaffNumber);
      oprot.writeFieldEnd();
      if (struct.StaffSkillLevel != null) {
        oprot.writeFieldBegin(STAFF_SKILL_LEVEL_FIELD_DESC);
        oprot.writeString(struct.StaffSkillLevel);
        oprot.writeFieldEnd();
      }
      if (struct.StaffTrainingDescription != null) {
        oprot.writeFieldBegin(STAFF_TRAINING_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.StaffTrainingDescription);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TDDIMaintenanceProcedureTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TDDIMaintenanceProcedureTupleScheme getScheme() {
      return new TDDIMaintenanceProcedureTupleScheme();
    }
  }

  private static class TDDIMaintenanceProcedureTupleScheme extends org.apache.thrift.scheme.TupleScheme<TDDIMaintenanceProcedure> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TDDIMaintenanceProcedure struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescription()) {
        optionals.set(2);
      }
      if (struct.isSetKeyValueMaps()) {
        optionals.set(3);
      }
      if (struct.isSetActivityDescription()) {
        optionals.set(4);
      }
      if (struct.isSetTechnicalDescription()) {
        optionals.set(5);
      }
      if (struct.isSetToolSpecification()) {
        optionals.set(6);
      }
      if (struct.isSetStaffNumber()) {
        optionals.set(7);
      }
      if (struct.isSetStaffSkillLevel()) {
        optionals.set(8);
      }
      if (struct.isSetStaffTrainingDescription()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeI64(struct.Id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.Name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.Description);
      }
      if (struct.isSetKeyValueMaps()) {
        {
          oprot.writeI32(struct.KeyValueMaps.size());
          for (TDDIKeyValueMap _iter36 : struct.KeyValueMaps)
          {
            _iter36.write(oprot);
          }
        }
      }
      if (struct.isSetActivityDescription()) {
        oprot.writeString(struct.ActivityDescription);
      }
      if (struct.isSetTechnicalDescription()) {
        oprot.writeString(struct.TechnicalDescription);
      }
      if (struct.isSetToolSpecification()) {
        oprot.writeString(struct.ToolSpecification);
      }
      if (struct.isSetStaffNumber()) {
        oprot.writeI32(struct.StaffNumber);
      }
      if (struct.isSetStaffSkillLevel()) {
        oprot.writeString(struct.StaffSkillLevel);
      }
      if (struct.isSetStaffTrainingDescription()) {
        oprot.writeString(struct.StaffTrainingDescription);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TDDIMaintenanceProcedure struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.Id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.Name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.Description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.KeyValueMaps = new java.util.ArrayList<TDDIKeyValueMap>(_list37.size);
          TDDIKeyValueMap _elem38;
          for (int _i39 = 0; _i39 < _list37.size; ++_i39)
          {
            _elem38 = new TDDIKeyValueMap();
            _elem38.read(iprot);
            struct.KeyValueMaps.add(_elem38);
          }
        }
        struct.setKeyValueMapsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.ActivityDescription = iprot.readString();
        struct.setActivityDescriptionIsSet(true);
      }
      if (incoming.get(5)) {
        struct.TechnicalDescription = iprot.readString();
        struct.setTechnicalDescriptionIsSet(true);
      }
      if (incoming.get(6)) {
        struct.ToolSpecification = iprot.readString();
        struct.setToolSpecificationIsSet(true);
      }
      if (incoming.get(7)) {
        struct.StaffNumber = iprot.readI32();
        struct.setStaffNumberIsSet(true);
      }
      if (incoming.get(8)) {
        struct.StaffSkillLevel = iprot.readString();
        struct.setStaffSkillLevelIsSet(true);
      }
      if (incoming.get(9)) {
        struct.StaffTrainingDescription = iprot.readString();
        struct.setStaffTrainingDescriptionIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

